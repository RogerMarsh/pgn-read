# parser_test.py
# Copyright 2012 Roger Marsh
# Licence: See LICENCE (BSD licence)

"""parser tests"""

import unittest
from copy import copy, deepcopy

from pgn.core import parser


class Fragments(unittest.TestCase):

    def setUp(self):
        self.pgn = parser.PGN()
        self.pgndm = parser.PGNDisplayMoves()
        self.pgnm = parser.PGNMove()
        self.pgnu = parser.PGNUpdate()
        self.pgnt = parser.PGNTags()
        self.pgne = parser.PGNEdit()
        self.pgnd = parser.PGNDisplay()
        self.tags = ''.join((
            '[Event"?"]',
            '[Site"?"]',
            '[Date"????.??.??"]',
            '[Round"??"]',
            '[White"?"]',
            '[Black"?"]',
            '[Result"*"]',
            ))
        self.movetexts = (
            ''.join((
                'e4c6d4d5exd5cxd5c4Nf6c5e6Nc3b6',
                '*',
                )),
            ''.join((
                'e4c6d4d5', 'g', 'exd5cxd5c4Nf6c5e6Nc3b6',
                '*',
                )),
            ''.join((
                'e4c6d4d5', 'g', 'exd5cxd5c4', '(c3)', 'Nf6c5e6Nc3b6',
                '*',
                )),
            ''.join((
                'e4c6d4d5exd5cxd5c4', '(c3R1)', 'Nf6c5e6Nc3b6',
                '*',
                )),
            ''.join((
                'e4c6d4d5', 'R1', 'exd5cxd5c4', '(c3)', 'Nf6c5e6Nc3b6',
                '*',
                )),
            ''.join((
                'e4c6d4d5exd5cxd5c4', '(c3g6Nf3Bg7)', 'Nf6c5e6Nc3b6',
                '*',
                )),
            ''.join((
                'e4c6d4d5exd5cxd5c4', '(c3g6', 'g', 'Nf3Bg7)', 'Nf6c5e6Nc3b6',
                '*',
                )),
            ''.join((
                'e4c6d4d5exd5cxd5c4', '(c3g6Nf3', '(g3)', 'Bg7)',
                'Nf6c5e6Nc3b6',
                '*',
                )),
            ''.join((
                'e4c6d4d5exd5cxd5c4', '(c3g6', 'g', 'Nf3', '(g3)', 'Bg7)',
                'Nf6c5e6Nc3b6',
                '*',
                )),
            ''.join((
                'e4c6d4d5exd5cxd5', 'g', 'c4', '{Some comment}',
                'c4Nf6c5e6Nc3b6',
                '*',
                )),
            ''.join((
                'e4c6d4d5exd5cxd5', 'g', 'c4', '(c3g6Nf3Bg7)',
                'c4Nf6c5e6Nc3b6',
                '*',
                )),
            ''.join((
                'e4c6d4d5exd5cxd5', 'g', 'c4', '(c3g6Nf3', '(g3)', 'Bg7)',
                'c4Nf6c5e6Nc3b6',
                '*',
                )),
            ''.join((
                'e4c612.....<>\n;comment\n<>{}\n\n\n%escape\n$45.',
                '{hello\n\n;ok}',
                '*',
                )),
            )

    def tearDown(self):
        pass

    def test__raises(self):
        """"""
        pass

    def test__copy(self):
        """"""
        pass

    def test__assumptions(self):
        """"""
        msg = 'Failure of this test invalidates all other tests'

    def test_process_games_pgn(self):
        """"""
        expected_outputs = (
            ((True, True),
             [],
             ),
            ((True, False),
             [],
             ),
            ((True, False),
             [],
             ),
            ((True, False),
             [],
             ),
            ((True, False),
             [],
             ),
            ((True, True),
             [],
             ),
            ((True, False),
             [],
             ),
            ((True, True),
             [],
             ),
            ((True, False),
             [],
             ),
            ((True, False),
             [],
             ),
            ((True, False),
             [],
             ),
            ((True, False),
             [],
             ),
            ((True, True),
             [],
             ),
            )
        pgn = self.pgn
        for e, mt in enumerate(self.movetexts):
            pgn.extract_first_game(''.join((self.tags, mt)))
            pgn.process_game()
            output = []
            output.append((pgn.is_tag_roster_valid(), pgn.is_movetext_valid()))
            output.append(pgn.gametokens)
            for eo, o in zip(expected_outputs[e], output):
                self.assertEqual(eo, o)

    def test_process_games_pgnd(self):
        """"""
        expected_outputs = (
            ((True, True),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', 'Nf6', 'c5', 'e6',
              'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (True, 6, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('Nf6', (True, 7, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('c5', (True, 8, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('e6', (True, 9, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('Nc3', (True, 10, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('b6', (True, 11, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 1, 12, 12, 1, 11, 12, 12, 1, 12, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('*', ('*', 12, None))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'g', 'exd5', 'cxd5', 'c4', 'Nf6', 'c5',
              'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('g', (False, 4, False)), ('exd5', (0, 5, False)), ('cxd5', (0, 6, False)), ('c4', (0, 7, False)), ('Nf6', (0, 8, False)), ('c5', (0, 9, False)), ('e6', (0, 10, False)), ('Nc3', (0, 11, False)), ('b6', (0, 12, False)), ('*', (0, 13, False))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'g', 'exd5', 'cxd5', 'c4', '(', 'c3',
              ')', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('g', (False, 4, False)), ('exd5', (0, 5, False)), ('cxd5', (0, 6, False)), ('c4', (0, 7, False)), ('(', (None, 8, False)), ('c3', (0, 9, False)), (')', (')', 10, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('Nf6', (0, 11, False)), ('c5', (0, 12, False)), ('e6', (0, 13, False)), ('Nc3', (0, 14, False)), ('b6', (0, 15, False)), ('*', (0, 16, False))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', '(', 'c3', 'R',
              '1', ')', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (True, 6, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('(', ('(', 7, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c3', (True, 8, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('R', (False, 9, False)), ('1', (0, 10, False)), (')', (')', 11, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('Nf6', (True, 12, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('c5', (True, 13, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('e6', (True, 14, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('Nc3', (True, 15, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('b6', (True, 16, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 1, 12, 12, 1, 11, 12, 12, 1, 12, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('*', ('*', 17, None))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'R', '1', 'exd5', 'cxd5', 'c4', '(',
              'c3', ')', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('R', (False, 4, False)), ('1', (0, 5, False)), ('exd5', (0, 6, False)), ('cxd5', (0, 7, False)), ('c4', (0, 8, False)), ('(', (None, 9, False)), ('c3', (0, 10, False)), (')', (')', 11, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('Nf6', (0, 12, False)), ('c5', (0, 13, False)), ('e6', (0, 14, False)), ('Nc3', (0, 15, False)), ('b6', (0, 16, False)), ('*', (0, 17, False))),
             ),
            ((True, True),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', '(', 'c3', 'g6',
              'Nf3', 'Bg7', ')', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (True, 6, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('(', ('(', 7, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c3', (True, 8, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('g6', (True, 9, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('Nf3', (True, 10, ((5, 7, 6, 4, 2, 6, 12, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 7, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('Bg7', (True, 11, ((5, 7, 6, 4, 2, 6, 12, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 7, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 10, 1, 9, 11, 10, 8, 3, 12, 11, 9), 0, 15, None))), (')', (')', 12, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('Nf6', (True, 13, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('c5', (True, 14, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('e6', (True, 15, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('Nc3', (True, 16, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('b6', (True, 17, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 1, 12, 12, 1, 11, 12, 12, 1, 12, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('*', ('*', 18, None))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', '(', 'c3', 'g6',
              'g', 'Nf3', 'Bg7', ')', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (True, 6, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('(', ('(', 7, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c3', (True, 8, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('g6', (True, 9, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('g', (False, 10, False)), ('Nf3', (0, 11, False)), ('Bg7', (0, 12, False)), (')', (')', 13, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('Nf6', (True, 14, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('c5', (True, 15, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('e6', (True, 16, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('Nc3', (True, 17, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('b6', (True, 18, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 1, 12, 12, 1, 11, 12, 12, 1, 12, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('*', ('*', 19, None))),
             ),
            ((True, True),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', '(', 'c3', 'g6',
              'Nf3', '(', 'g3', ')', 'Bg7', ')', 'Nf6', 'c5', 'e6', 'Nc3',
              'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (True, 6, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('(', ('(', 7, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c3', (True, 8, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('g6', (True, 9, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('Nf3', (True, 10, ((5, 7, 6, 4, 2, 6, 12, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 7, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('(', ('(', 11, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('g3', (True, 12, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 12, 0, 12, 12, 0, 12, 12, 12, 0, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), (')', (')', 13, ((5, 7, 6, 4, 2, 6, 12, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 7, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('Bg7', (True, 14, ((5, 7, 6, 4, 2, 6, 12, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 7, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 10, 1, 9, 11, 10, 8, 3, 12, 11, 9), 0, 15, None))), (')', (')', 15, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('Nf6', (True, 16, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('c5', (True, 17, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('e6', (True, 18, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('Nc3', (True, 19, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('b6', (True, 20, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 1, 12, 12, 1, 11, 12, 12, 1, 12, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('*', ('*', 21, None))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', '(', 'c3', 'g6',
              'g', 'Nf3', '(', 'g3', ')', 'Bg7', ')', 'Nf6', 'c5', 'e6',
              'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (True, 6, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('(', ('(', 7, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c3', (True, 8, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('g6', (True, 9, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('g', (False, 10, False)), ('Nf3', (0, 11, False)), ('(', (None, 12, False)), ('g3', (0, 13, False)), (')', (')', 14, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('Bg7', (0, 15, False)), (')', (')', 16, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('Nf6', (True, 17, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('c5', (True, 18, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('e6', (True, 19, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('Nc3', (True, 20, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('b6', (True, 21, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 1, 12, 12, 1, 11, 12, 12, 1, 12, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('*', ('*', 22, None))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'g', 'c4',
              '{Some comment}', 'c4', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('g', (False, 6, False)), ('c4', (0, 7, False)), ('{Some comment}', ('{', 8, False)), ('c4', (0, 9, False)), ('Nf6', (0, 10, False)), ('c5', (0, 11, False)), ('e6', (0, 12, False)), ('Nc3', (0, 13, False)), ('b6', (0, 14, False)), ('*', (0, 15, False))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'g', 'c4', '(', 'c3',
              'g6', 'Nf3', 'Bg7', ')', 'c4', 'Nf6', 'c5', 'e6', 'Nc3', 'b6',
              '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('g', (False, 6, False)), ('c4', (0, 7, False)), ('(', (None, 8, False)), ('c3', (0, 9, False)), ('g6', (0, 10, False)), ('Nf3', (0, 11, False)), ('Bg7', (0, 12, False)), (')', (')', 13, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (0, 14, False)), ('Nf6', (0, 15, False)), ('c5', (0, 16, False)), ('e6', (0, 17, False)), ('Nc3', (0, 18, False)), ('b6', (0, 19, False)), ('*', (0, 20, False))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'g', 'c4', '(', 'c3',
              'g6', 'Nf3', '(', 'g3', ')', 'Bg7', ')', 'c4', 'Nf6', 'c5',
              'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('g', (False, 6, False)), ('c4', (0, 7, False)), ('(', (None, 8, False)), ('c3', (0, 9, False)), ('g6', (0, 10, False)), ('Nf3', (0, 11, False)), ('(', (None, 12, False)), ('g3', (0, 13, False)), (')', (None, 14, False)), ('Bg7', (0, 15, False)), (')', (')', 16, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (0, 17, False)), ('Nf6', (0, 18, False)), ('c5', (0, 19, False)), ('e6', (0, 20, False)), ('Nc3', (0, 21, False)), ('b6', (0, 22, False)), ('*', (0, 23, False))),
             ),
            ((True, True),
             ['e4', 'c6', '12', '.....', '<>', '\n', ';comment\n', '<>', '{}',
              '\n\n', '\n%escape\n', '$45', '.', '{hello\n\n;ok}', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('12', ('(?:[1-9][0-9]*)', 2, False)), ('.....', ('.', 3, False)), ('<>', ('<', 4, False)), ('\n', (None, 5, False)), (';comment\n', (';', 6, False)), ('<>', ('<', 7, False)), ('{}', ('{', 8, False)), ('\n\n', (None, 9, False)), ('\n%escape\n', ('%', 10, False)), ('$45', ('$', 11, False)), ('.', ('.', 12, False)), ('{hello\n\n;ok}', ('{', 13, False)), ('*', ('*', 14, None))),
             ),
            )
        pgn = self.pgnd
        for e, mt in enumerate(self.movetexts):
            pgn.extract_first_game(''.join((self.tags, mt)))
            pgn.process_game()
            output = []
            output.append((pgn.is_tag_roster_valid(), pgn.is_movetext_valid()))
            output.append(pgn.gametokens)
            moves = []
            for m in pgn.moves:
                if isinstance(m[1], int):
                    moves.append((pgn.gametokens[m[1]], m))
                else:
                    moves.append(('   ', m))
            output.append(tuple(moves))
            for eo, o in zip(expected_outputs[e], output):
                self.assertEqual(eo, o)

    def test_process_games_pgne(self):
        """"""
        expected_outputs = (
            ((True, True),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', 'Nf6', 'c5', 'e6',
              'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (True, 6, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('Nf6', (True, 7, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('c5', (True, 8, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('e6', (True, 9, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('Nc3', (True, 10, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('b6', (True, 11, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 1, 12, 12, 1, 11, 12, 12, 1, 12, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('*', ('*', 12, None))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'g', 'exd5', 'cxd5', 'c4', 'Nf6', 'c5',
              'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('g', (False, 4, False)), ('exd5', (0, 5, False)), ('cxd5', (0, 6, False)), ('c4', (0, 7, False)), ('Nf6', (0, 8, False)), ('c5', (0, 9, False)), ('e6', (0, 10, False)), ('Nc3', (0, 11, False)), ('b6', (0, 12, False)), ('*', (0, 13, False))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'g', 'exd5', 'cxd5', 'c4', '(', 'c3',
              ')', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('g', (False, 4, False)), ('exd5', (0, 5, False)), ('cxd5', (0, 6, False)), ('c4', (0, 7, False)), ('(', (None, 8, False)), ('c3', (0, 9, False)), (')', (')', 10, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('Nf6', (0, 11, False)), ('c5', (0, 12, False)), ('e6', (0, 13, False)), ('Nc3', (0, 14, False)), ('b6', (0, 15, False)), ('*', (0, 16, False))),
             ),
            ((True, True),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', '(', 'c3', 'R1',
              ')', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (True, 6, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('(', ('(', 7, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c3', (True, 8, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('R1', (False, 9, False)), (')', (')', 10, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('Nf6', (True, 11, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('c5', (True, 12, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('e6', (True, 13, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('Nc3', (True, 14, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('b6', (True, 15, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 1, 12, 12, 1, 11, 12, 12, 1, 12, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('*', ('*', 16, None))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'R1e', 'x', 'd5', 'cxd5', 'c4', '(',
              'c3', ')', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('R1e', (False, 4, False)), ('x', (None, 5, False)), ('d5', (0, 6, False)), ('cxd5', (0, 7, False)), ('c4', (0, 8, False)), ('(', (None, 9, False)), ('c3', (0, 10, False)), (')', (')', 11, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('Nf6', (0, 12, False)), ('c5', (0, 13, False)), ('e6', (0, 14, False)), ('Nc3', (0, 15, False)), ('b6', (0, 16, False)), ('*', (0, 17, False))),
             ),
            ((True, True),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', '(', 'c3', 'g6',
              'Nf3', 'Bg7', ')', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (True, 6, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('(', ('(', 7, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c3', (True, 8, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('g6', (True, 9, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('Nf3', (True, 10, ((5, 7, 6, 4, 2, 6, 12, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 7, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('Bg7', (True, 11, ((5, 7, 6, 4, 2, 6, 12, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 7, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 10, 1, 9, 11, 10, 8, 3, 12, 11, 9), 0, 15, None))), (')', (')', 12, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('Nf6', (True, 13, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('c5', (True, 14, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('e6', (True, 15, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('Nc3', (True, 16, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('b6', (True, 17, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 1, 12, 12, 1, 11, 12, 12, 1, 12, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('*', ('*', 18, None))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', '(', 'c3', 'g6',
              'g', 'Nf3', 'Bg7', ')', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (True, 6, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('(', ('(', 7, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c3', (True, 8, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('g6', (True, 9, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('g', (False, 10, False)), ('Nf3', (0, 11, False)), ('Bg7', (0, 12, False)), (')', (')', 13, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('Nf6', (True, 14, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('c5', (True, 15, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('e6', (True, 16, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('Nc3', (True, 17, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('b6', (True, 18, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 1, 12, 12, 1, 11, 12, 12, 1, 12, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('*', ('*', 19, None))),
             ),
            ((True, True),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', '(', 'c3', 'g6',
              'Nf3', '(', 'g3', ')', 'Bg7', ')', 'Nf6', 'c5', 'e6', 'Nc3',
              'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (True, 6, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('(', ('(', 7, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c3', (True, 8, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('g6', (True, 9, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('Nf3', (True, 10, ((5, 7, 6, 4, 2, 6, 12, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 7, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('(', ('(', 11, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('g3', (True, 12, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 12, 0, 12, 12, 0, 12, 12, 12, 0, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), (')', (')', 13, ((5, 7, 6, 4, 2, 6, 12, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 7, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('Bg7', (True, 14, ((5, 7, 6, 4, 2, 6, 12, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 7, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 10, 1, 9, 11, 10, 8, 3, 12, 11, 9), 0, 15, None))), (')', (')', 15, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('Nf6', (True, 16, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('c5', (True, 17, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('e6', (True, 18, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('Nc3', (True, 19, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('b6', (True, 20, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 1, 12, 12, 1, 11, 12, 12, 1, 12, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('*', ('*', 21, None))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', '(', 'c3', 'g6',
              'g', 'Nf3', '(', 'g3', ')', 'Bg7', ')', 'Nf6', 'c5', 'e6',
              'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (True, 6, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('(', ('(', 7, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c3', (True, 8, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('g6', (True, 9, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('g', (False, 10, False)), ('Nf3', (0, 11, False)), ('(', (None, 12, False)), ('g3', (0, 13, False)), (')', (')', 14, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('Bg7', (0, 15, False)), (')', (')', 16, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('Nf6', (True, 17, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('c5', (True, 18, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('e6', (True, 19, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('Nc3', (True, 20, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('b6', (True, 21, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 1, 12, 12, 1, 11, 12, 12, 1, 12, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('*', ('*', 22, None))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'g', 'c4',
              '{Some comment}', 'c4', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('g', (False, 6, False)), ('c4', (0, 7, False)), ('{Some comment}', ('{', 8, False)), ('c4', (0, 9, False)), ('Nf6', (0, 10, False)), ('c5', (0, 11, False)), ('e6', (0, 12, False)), ('Nc3', (0, 13, False)), ('b6', (0, 14, False)), ('*', (0, 15, False))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'g', 'c4', '(', 'c3',
              'g6', 'Nf3', 'Bg7', ')', 'c4', 'Nf6', 'c5', 'e6', 'Nc3', 'b6',
              '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('g', (False, 6, False)), ('c4', (0, 7, False)), ('(', (None, 8, False)), ('c3', (0, 9, False)), ('g6', (0, 10, False)), ('Nf3', (0, 11, False)), ('Bg7', (0, 12, False)), (')', (')', 13, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (0, 14, False)), ('Nf6', (0, 15, False)), ('c5', (0, 16, False)), ('e6', (0, 17, False)), ('Nc3', (0, 18, False)), ('b6', (0, 19, False)), ('*', (0, 20, False))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'g', 'c4', '(', 'c3',
              'g6', 'Nf3', '(', 'g3', ')', 'Bg7', ')', 'c4', 'Nf6', 'c5',
              'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('g', (False, 6, False)), ('c4', (0, 7, False)), ('(', (None, 8, False)), ('c3', (0, 9, False)), ('g6', (0, 10, False)), ('Nf3', (0, 11, False)), ('(', (None, 12, False)), ('g3', (0, 13, False)), (')', (None, 14, False)), ('Bg7', (0, 15, False)), (')', (')', 16, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (0, 17, False)), ('Nf6', (0, 18, False)), ('c5', (0, 19, False)), ('e6', (0, 20, False)), ('Nc3', (0, 21, False)), ('b6', (0, 22, False)), ('*', (0, 23, False))),
             ),
            ((True, True),
             ['e4', 'c6', '12', '.....', '<>', '\n', ';comment\n', '<>', '{}',
              '\n\n', '\n%escape\n', '$45', '.', '{hello\n\n;ok}', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('12', ('(?:[1-9][0-9]*)', 2, False)), ('.....', ('.', 3, False)), ('<>', ('<', 4, False)), ('\n', (None, 5, False)), (';comment\n', (';', 6, False)), ('<>', ('<', 7, False)), ('{}', ('{', 8, False)), ('\n\n', (None, 9, False)), ('\n%escape\n', ('%', 10, False)), ('$45', ('$', 11, False)), ('.', ('.', 12, False)), ('{hello\n\n;ok}', ('{', 13, False)), ('*', ('*', 14, None))),
             ),
            )
        pgn = self.pgne
        for e, mt in enumerate(self.movetexts):
            pgn.extract_first_game(''.join((self.tags, mt)))
            pgn.process_game()
            output = []
            output.append((pgn.is_tag_roster_valid(), pgn.is_movetext_valid()))
            output.append(pgn.gametokens)
            moves = []
            for m in pgn.moves:
                if isinstance(m[1], int):
                    moves.append((pgn.gametokens[m[1]], m))
                else:
                    moves.append(('   ', m))
            output.append(tuple(moves))
            for eo, o in zip(expected_outputs[e], output):
                self.assertEqual(eo, o)

    def test_process_games_pgndm(self):
        """"""
        expected_outputs = (
            ((True, True),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', 'Nf6', 'c5', 'e6',
              'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (True, 6, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('Nf6', (True, 7, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('c5', (True, 8, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('e6', (True, 9, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('Nc3', (True, 10, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('b6', (True, 11, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 1, 12, 12, 1, 11, 12, 12, 1, 12, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('*', ('*', 12, None))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'g', 'exd5', 'cxd5', 'c4', 'Nf6', 'c5',
              'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('g', (False, 4, False)), ('exd5', (0, 5, False)), ('cxd5', (0, 6, False)), ('c4', (0, 7, False)), ('Nf6', (0, 8, False)), ('c5', (0, 9, False)), ('e6', (0, 10, False)), ('Nc3', (0, 11, False)), ('b6', (0, 12, False)), ('*', (0, 13, False))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'g', 'exd5', 'cxd5', 'c4', 'c3', ')',
              'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('g', (False, 4, False)), ('exd5', (0, 5, False)), ('cxd5', (0, 6, False)), ('c4', (0, 7, False)), ('c3', (0, 8, False)), (')', (')', 9, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('Nf6', (0, 10, False)), ('c5', (0, 11, False)), ('e6', (0, 12, False)), ('Nc3', (0, 13, False)), ('b6', (0, 14, False)), ('*', (0, 15, False))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', '(', 'c3', 'R',
              '1', ')', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (True, 6, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('(', ('(', 7, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c3', (True, 8, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('R', (False, 9, False)), ('1', (0, 10, False)), (')', (')', 11, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('Nf6', (True, 12, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('c5', (True, 13, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('e6', (True, 14, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('Nc3', (True, 15, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('b6', (True, 16, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 1, 12, 12, 1, 11, 12, 12, 1, 12, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('*', ('*', 17, None))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'R', '1', 'exd5', 'cxd5', 'c4', 'c3',
              ')', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('R', (False, 4, False)), ('1', (0, 5, False)), ('exd5', (0, 6, False)), ('cxd5', (0, 7, False)), ('c4', (0, 8, False)), ('c3', (0, 9, False)), (')', (')', 10, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('Nf6', (0, 11, False)), ('c5', (0, 12, False)), ('e6', (0, 13, False)), ('Nc3', (0, 14, False)), ('b6', (0, 15, False)), ('*', (0, 16, False))),
             ),
            ((True, True),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', '(', 'c3', 'g6',
              'Nf3', 'Bg7', ')', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (True, 6, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('(', ('(', 7, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c3', (True, 8, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('g6', (True, 9, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('Nf3', (True, 10, ((5, 7, 6, 4, 2, 6, 12, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 7, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('Bg7', (True, 11, ((5, 7, 6, 4, 2, 6, 12, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 7, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 10, 1, 9, 11, 10, 8, 3, 12, 11, 9), 0, 15, None))), (')', (')', 12, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('Nf6', (True, 13, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('c5', (True, 14, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('e6', (True, 15, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('Nc3', (True, 16, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('b6', (True, 17, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 1, 12, 12, 1, 11, 12, 12, 1, 12, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('*', ('*', 18, None))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', '(', 'c3', 'g6',
              'g', 'Nf3', 'Bg7', ')', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (True, 6, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('(', ('(', 7, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c3', (True, 8, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('g6', (True, 9, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('g', (False, 10, False)), ('Nf3', (0, 11, False)), ('Bg7', (0, 12, False)), (')', (')', 13, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('Nf6', (True, 14, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('c5', (True, 15, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('e6', (True, 16, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('Nc3', (True, 17, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('b6', (True, 18, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 1, 12, 12, 1, 11, 12, 12, 1, 12, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('*', ('*', 19, None))),
             ),
            ((True, True),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', '(', 'c3', 'g6',
              'Nf3', '(', 'g3', ')', 'Bg7', ')', 'Nf6', 'c5', 'e6', 'Nc3',
              'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (True, 6, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('(', ('(', 7, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c3', (True, 8, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('g6', (True, 9, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('Nf3', (True, 10, ((5, 7, 6, 4, 2, 6, 12, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 7, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('(', ('(', 11, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('g3', (True, 12, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 12, 0, 12, 12, 0, 12, 12, 12, 0, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), (')', (')', 13, ((5, 7, 6, 4, 2, 6, 12, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 7, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('Bg7', (True, 14, ((5, 7, 6, 4, 2, 6, 12, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 7, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 10, 1, 9, 11, 10, 8, 3, 12, 11, 9), 0, 15, None))), (')', (')', 15, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('Nf6', (True, 16, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('c5', (True, 17, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('e6', (True, 18, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('Nc3', (True, 19, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('b6', (True, 20, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 1, 12, 12, 1, 11, 12, 12, 1, 12, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('*', ('*', 21, None))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', '(', 'c3', 'g6',
              'g', 'Nf3', 'g3', ')', 'Bg7', ')', 'Nf6', 'c5', 'e6', 'Nc3',
              'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (True, 6, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('(', ('(', 7, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c3', (True, 8, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('g6', (True, 9, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('g', (False, 10, False)), ('Nf3', (0, 11, False)), ('g3', (0, 12, False)), (')', (')', 13, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 1, 1, 12, 12, 1, 1, 12, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('Bg7', (0, 14, False)), (')', (')', 15, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 18))), ('Nf6', (True, 16, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('c5', (True, 17, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 11, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('e6', (True, 18, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('Nc3', (True, 19, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 12, 12, 12, 1, 11, 12, 12, 1, 1, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 1, 15, None))), ('b6', (True, 20, ((5, 12, 6, 4, 2, 6, 7, 5, 0, 0, 12, 12, 12, 0, 0, 0, 12, 12, 7, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 0, 1, 12, 12, 12, 12, 12, 1, 12, 12, 1, 11, 12, 12, 1, 12, 12, 12, 12, 1, 1, 1, 9, 11, 10, 8, 3, 10, 12, 9), 0, 15, None))), ('*', ('*', 21, None))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'g', 'c4', 'c4', 'Nf6',
              'c5', 'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('g', (False, 6, False)), ('c4', (0, 7, False)), ('c4', (0, 8, False)), ('Nf6', (0, 9, False)), ('c5', (0, 10, False)), ('e6', (0, 11, False)), ('Nc3', (0, 12, False)), ('b6', (0, 13, False)), ('*', (0, 14, False))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'g', 'c4', 'c3', 'g6',
              'Nf3', 'Bg7', ')', 'c4', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('g', (False, 6, False)), ('c4', (0, 7, False)), ('c3', (0, 8, False)), ('g6', (0, 9, False)), ('Nf3', (0, 10, False)), ('Bg7', (0, 11, False)), (')', (')', 12, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (0, 13, False)), ('Nf6', (0, 14, False)), ('c5', (0, 15, False)), ('e6', (0, 16, False)), ('Nc3', (0, 17, False)), ('b6', (0, 18, False)), ('*', (0, 19, False))),
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'g', 'c4', 'c3', 'g6',
              'Nf3', 'g3', 'Bg7', ')', 'c4', 'Nf6', 'c5', 'e6', 'Nc3', 'b6',
              '*'],
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('d4', (True, 2, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 19))), ('d5', (True, 3, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, 43))), ('exd5', (True, 4, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, None))), ('cxd5', (True, 5, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('g', (False, 6, False)), ('c4', (0, 7, False)), ('c3', (0, 8, False)), ('g6', (0, 9, False)), ('Nf3', (0, 10, False)), ('g3', (0, 11, False)), ('Bg7', (0, 12, False)), (')', (')', 13, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 12, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 12, 12, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('c4', (0, 14, False)), ('Nf6', (0, 15, False)), ('c5', (0, 16, False)), ('e6', (0, 17, False)), ('Nc3', (0, 18, False)), ('b6', (0, 19, False)), ('*', (0, 20, False))),
             ),
            ((True, True),
             ['e4', 'c6', '*'],
             ),
             (('   ', ('FEN', None, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('e4', (True, 0, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 1, 15, 20))), ('c6', (True, 1, ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 12, 0, 0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 1, 12, 12, 12, 12, 12, 1, 1, 12, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9), 0, 15, None))), ('*', ('*', 2, None))),
            )
        pgn = self.pgndm
        for e, mt in enumerate(self.movetexts):
            pgn.extract_first_game(''.join((self.tags, mt)))
            pgn.process_game()
            output = []
            output.append((pgn.is_tag_roster_valid(), pgn.is_movetext_valid()))
            output.append(pgn.gametokens)
            moves = []
            for m in pgn.moves:
                if isinstance(m[1], int):
                    moves.append((pgn.gametokens[m[1]], m))
                else:
                    moves.append(('   ', m))
            output.append(tuple(moves))
            for eo, o in zip(expected_outputs[e], output):
                self.assertEqual(eo, o)

    def test_process_games_pgnu(self):
        """"""
        expected_outputs = (
            ((True, True),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', 'Nf6', 'c5', 'e6',
              'Nc3', 'b6', '*'],
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'g', 'exd5', 'cxd5', 'c4', 'Nf6', 'c5',
              'e6', 'Nc3', 'b6', '*'],
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'g', 'exd5', 'cxd5', 'c4', '(', 'c3',
              ')', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', '(', 'c3', 'R',
              '1', ')', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'R', '1', 'exd5', 'cxd5', 'c4', '(',
              'c3', ')', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             ),
            ((True, True),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', '(', 'c3', 'g6',
              'Nf3', 'Bg7', ')', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', '(', 'c3', 'g6',
              'g', 'Nf3', 'Bg7', ')', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             ),
            ((True, True),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', '(', 'c3', 'g6',
              'Nf3', '(', 'g3', ')', 'Bg7', ')', 'Nf6', 'c5', 'e6', 'Nc3',
              'b6', '*'],
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', '(', 'c3', 'g6',
              'g', 'Nf3', '(', 'g3', ')', 'Bg7', ')', 'Nf6', 'c5', 'e6',
              'Nc3', 'b6', '*'],
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'g', 'c4', '{', 'Some',
              ' ', 'comment', '}', 'c4', 'Nf6', 'c5', 'e6', 'Nc3', 'b6', '*'],
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'g', 'c4', '(', 'c3',
              'g6', 'Nf3', 'Bg7', ')', 'c4', 'Nf6', 'c5', 'e6', 'Nc3', 'b6',
              '*'],
             ),
            ((True, False),
             ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'g', 'c4', '(', 'c3',
              'g6', 'Nf3', '(', 'g3', ')', 'Bg7', ')', 'c4', 'Nf6', 'c5',
              'e6', 'Nc3', 'b6', '*'],
             ),
            ((True, True),
             ['e4', 'c6', '<', '>', '\n', ';', 'comment', '\n', '<', '>', '{',
              '}', '\n', '%', 'escape', '\n', '$45', '{', 'hello', '\n', ';',
              'ok', '}', '*'],
             ),
            )
        pgn = self.pgnu
        for e, mt in enumerate(self.movetexts):
            pgn.extract_first_game(''.join((self.tags, mt)))
            pgn.process_game()
            output = []
            output.append((pgn.is_tag_roster_valid(), pgn.is_movetext_valid()))
            output.append(pgn.gametokens)
            for eo, o in zip(expected_outputs[e], output):
                self.assertEqual(eo, o)

    def test_process_games_pgnt(self):
        """"""
        expected_outputs = (
            ((True, False),
             [],
             ),
            ((True, False),
             [],
             ),
            ((True, False),
             [],
             ),
            ((True, False),
             [],
             ),
            ((True, False),
             [],
             ),
            ((True, False),
             [],
             ),
            ((True, False),
             [],
             ),
            ((True, False),
             [],
             ),
            ((True, False),
             [],
             ),
            ((True, False),
             [],
             ),
            ((True, False),
             [],
             ),
            ((True, False),
             [],
             ),
            ((True, False),
             [],
             ),
            )
        pgn = self.pgnt
        for e, mt in enumerate(self.movetexts):
            pgn.extract_first_game(''.join((self.tags, mt)))
            pgn.process_game()
            output = []
            output.append((pgn.is_tag_roster_valid(), pgn.is_movetext_valid()))
            output.append(pgn.gametokens)
            for eo, o in zip(expected_outputs[e], output):
                self.assertEqual(eo, o)


class PGNMove(unittest.TestCase):

    def setUp(self):
        self.pgnd = parser.PGNDisplay()
        self.pgnm = parser.PGNMove()
        self.gametags = '\n'.join((
            '[Event "Test Nc3e4"]',
            '[Site "Home"]',
            '[Date "2011.02.12"]',
            '[Round ""]',
            '[White "Me"]',
            '[Black "Him"]',
            '[Result "*"]',
            '',
            ))
        self.gamemoves = '\n'.join((
            'e4e5',
            ))
        self.movetexts = (
            'Qf3',
            'Nf3',
            'Rf3',
            'B',
            'Bf',
            'Qf3Nf6',
            )
        self.pgnd.extract_first_game(''.join((self.gametags, self.gamemoves)))
        self.pgnd.process_game()
        position = self.pgnd.moves[-1][-1]

    def tearDown(self):
        pass

    def test__raises(self):
        """"""
        pass

    def test__copy(self):
        """"""
        pass

    def test__assumptions(self):
        """"""
        msg = 'Failure of this test invalidates all other tests'
        self.assertEqual(
            'rnbqkbnr/pppp1ppp/8/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq e6 0 1',
            parser.get_fen_from_position(self.pgnd.moves[-1][-1]))


    def test_process_games_pgnm(self):
        """"""
        expected_outputs = (
            (True, ['', 'Qf3', '']),
            (True, ['', 'Nf3', '']),
            (False, ['', 'Rf3', '']),
            (False, ['B']),
            (False, ['Bf']),
            (False, ['', 'Qf3', '', 'Nf6', '']),
            )
        pgn = self.pgnm
        position = self.pgnd.moves[-1][-1]
        for e, mt in enumerate(self.movetexts):
            pgn.set_position_fen(fen=parser.get_fen_from_position(position))
            pgn.extract_first_game(mt)
            pgn.process_game()
            self.assertEqual(expected_outputs[e][0], pgn.is_movetext_valid())
            self.assertEqual(expected_outputs[e][1], pgn.tokens)


class Games(unittest.TestCase):

    def setUp(self):
        self.pgn = parser.PGN()
        self.pgndm = parser.PGNDisplayMoves()
        self.pgnm = parser.PGNMove()
        self.pgnu = parser.PGNUpdate()
        self.pgnt = parser.PGNTags()
        self.pgne = parser.PGNEdit()
        self.pgnd = parser.PGNDisplay()
        self.games = (
            '\n'.join(
                ('[Event "4NCL-9899A BA1-BA2"]',
                 '[Site "Rd1-Warwick"]',
                 '[Date "1998.10.24"]',
                 '[Round "1.1"]',
                 '[White "Kopec, Danny"]',
                 '[Black "Crouch, Colin"]',
                 '[Result "1/2-1/2"]',
                 '[ECO "B02"]',
                 '[WhiteElo "2400"]',
                 '[BlackElo "2410"]',
                 '[PlyCount "67"]',
                 '[EventDate "1998.10.24"]',
                 '',
                 '1. e4 Nf6 2. e5 Nd5 3. Nc3 Nxc3 4. dxc3 Nc6 5. Nf3 d6 6. Bb5 e6 7. Bf4 Be7 8.',
                 'Qe2 a6 9. Bxc6+ bxc6 10. Rd1 d5 11. h4 Bd7 12. Bg5 O-O 13. Rd4 f5 14. exf6 gxf6',
                 '15. Bh6 Rf7 16. Rg4+ Kh8 17. Rf4 Be8 18. Qxe6 Bd6 19. Rg4 Qe7 20. Qxe7 Rxe7+',
                 '21. Kd2 Bd7 22. Ra4 c5 23. Ra5 Bb5 24. a4 Bd7 25. Re1 Rxe1 26. Nxe1 c6 27. Nd3',
                 'Bc7 28. Rxc5 Bb6 29. Be3 Bxc5 30. Nxc5 Bc8 31. a5 Kg7 32. g3 Kf7 33. Bf4 Bg4',
                 '34. b4 1/2-1/2',
                 '',
                 )),
            ''.join(
                ('[Event"National Club: Gosport - Wood Green"]',
                 '[Site"Gosport"]',
                 '[Date"1989.05.07"]',
                 '[Round"QFinal"]',
                 '[White"Sowray P J"]',
                 '[Black"Marsh R"]',
                 '[Result"1-0"]',
                 'e4c6d4d5exd5cxd5c4Nf6c5e6Nc3b6b4a5Bf4axb4Nb5Na6Qa4Bd7',
                 'Bc7Nxc5Qd1Qc8dxc5bxc5Nf3Qb7Nd6Bxd6Bxd6Qb6Be5Ke7Be2Ne4O-Of6Bb2Nc3',
                 'Bxc3bxc3Qd3(Qb3)Ra3Rfb1Qa7Qc2g6Rb3d4Bc4Rxb3Bxb3Qa6a4Rb8a5e5Bd5Rb2',
                 'Qe4Bf5Qh4Qd3(c2(g5))g4Rb1Rxb1Qxb1Kg2Kd6Qxf6Kxd5Qxe5Kc6gxf5Qxf5',
                 'Qe8Kc7Qe7Kc8Ne5c2Qxc5Kd8Qxd4Ke8Qe3Kf8Kg3Qc8Nd3Kg8f4Qc6Qb6',
                 '1-0',
                 )),
            )

        self.tag_string_output = (
            '\n'.join(
                ('[Event "4NCL-9899A BA1-BA2"]',
                 '[Site "Rd1-Warwick"]',
                 '[Date "1998.10.24"]',
                 '[Round "1.1"]',
                 '[White "Kopec, Danny"]',
                 '[Black "Crouch, Colin"]',
                 '[Result "1/2-1/2"]',
                 '[ECO "B02"]',
                 '[WhiteElo "2400"]',
                 '[BlackElo "2410"]',
                 '[PlyCount "67"]',
                 '[EventDate "1998.10.24"]',
                 '',
                 '',
                 )),
            ''.join(
                ('[Event"National Club: Gosport - Wood Green"]',
                 '[Site"Gosport"]',
                 '[Date"1989.05.07"]',
                 '[Round"QFinal"]',
                 '[White"Sowray P J"]',
                 '[Black"Marsh R"]',
                 '[Result"1-0"]',
                 )),
            )
        self.tags_output = (
            {'ECO': 'B02',
             'WhiteElo': '2400',
             'Site': 'Rd1-Warwick',
             'Round': '1.1',
             'EventDate': '1998.10.24',
             'PlyCount': '67',
             'Black': 'Crouch, Colin',
             'Result': '1/2-1/2',
             'Date': '1998.10.24',
             'White': 'Kopec, Danny',
             'BlackElo': '2410',
             'Event': '4NCL-9899A BA1-BA2',
             },
            {'Site': 'Gosport',
             'Round': 'QFinal',
             'Black': 'Marsh R',
             'Result': '1-0',
             'Date': '1989.05.07',
             'White': 'Sowray P J',
             'Event': 'National Club: Gosport - Wood Green',
             },
            )
        self.tags_in_order_output = (
            [('Event', '4NCL-9899A BA1-BA2'),
             ('Site', 'Rd1-Warwick'),
             ('Date', '1998.10.24'),
             ('Round', '1.1'),
             ('White', 'Kopec, Danny'),
             ('Black', 'Crouch, Colin'),
             ('Result', '1/2-1/2'),
             ('ECO', 'B02'),
             ('WhiteElo', '2400'),
             ('BlackElo', '2410'),
             ('PlyCount', '67'),
             ('EventDate', '1998.10.24'),
             ],
            [('Event', 'National Club: Gosport - Wood Green'),
             ('Site', 'Gosport'),
             ('Date', '1989.05.07'),
             ('Round', 'QFinal'),
             ('White', 'Sowray P J'),
             ('Black', 'Marsh R'),
             ('Result', '1-0'),
             ],
            )
        self.tokens_output = (
            ['', '1', '', '.', '', ' ', '', 'e4', '', ' ', '', 'Nf6', '', ' ',
             '', '2', '', '.', '', ' ', '', 'e5', '', ' ', '', 'Nd5', '', ' ',
             '', '3', '', '.', '', ' ', '', 'Nc3', '', ' ', '', 'Nxc3', '',
             ' ', '', '4', '', '.', '', ' ', '', 'dxc3', '', ' ', '', 'Nc6',
             '', ' ', '', '5', '', '.', '', ' ', '', 'Nf3', '', ' ', '', 'd6',
             '', ' ', '', '6', '', '.', '', ' ', '', 'Bb5', '', ' ', '', 'e6',
             '', ' ', '', '7', '', '.', '', ' ', '', 'Bf4', '', ' ', '', 'Be7',
             '', ' ', '', '8', '', '.', '', '\n', '', 'Qe2', '', ' ', '', 'a6',
             '', ' ', '', '9', '', '.', '', ' ', '', 'Bxc6+', '', ' ', '',
             'bxc6', '', ' ', '', '10', '', '.', '', ' ', '', 'Rd1', '', ' ',
             '', 'd5', '', ' ', '', '11', '', '.', '', ' ', '', 'h4', '', ' ',
             '', 'Bd7', '', ' ', '', '12', '', '.', '', ' ', '', 'Bg5', '',
             ' ', '', 'O-O', '', ' ', '', '13', '', '.', '', ' ', '', 'Rd4',
             '', ' ', '', 'f5', '', ' ', '', '14', '', '.', '', ' ', '',
             'exf6', '', ' ', '', 'gxf6', '', '\n', '', '15', '', '.', '', ' ',
             '', 'Bh6', '', ' ', '', 'Rf7', '', ' ', '', '16', '', '.', '',
             ' ', '', 'Rg4+', '', ' ', '', 'Kh8', '', ' ', '', '17', '', '.',
             '', ' ', '', 'Rf4', '', ' ', '', 'Be8', '', ' ', '', '18', '',
             '.', '', ' ', '', 'Qxe6', '', ' ', '', 'Bd6', '', ' ', '', '19',
             '', '.', '', ' ', '', 'Rg4', '', ' ', '', 'Qe7', '', ' ', '',
             '20', '', '.', '', ' ', '', 'Qxe7', '', ' ', '', 'Rxe7+', '',
             '\n', '', '21', '', '.', '', ' ', '', 'Kd2', '', ' ', '', 'Bd7',
             '', ' ', '', '22', '', '.', '', ' ', '', 'Ra4', '', ' ', '', 'c5',
             '', ' ', '', '23', '', '.', '', ' ', '', 'Ra5', '', ' ', '',
             'Bb5', '', ' ', '', '24', '', '.', '', ' ', '', 'a4', '', ' ', '',
             'Bd7', '', ' ', '', '25', '', '.', '', ' ', '', 'Re1', '', ' ',
             '', 'Rxe1', '', ' ', '', '26', '', '.', '', ' ', '', 'Nxe1', '',
             ' ', '', 'c6', '', ' ', '', '27', '', '.', '', ' ', '', 'Nd3', '',
             '\n', '', 'Bc7', '', ' ', '', '28', '', '.', '', ' ', '', 'Rxc5',
             '', ' ', '', 'Bb6', '', ' ', '', '29', '', '.', '', ' ', '',
             'Be3', '', ' ', '', 'Bxc5', '', ' ', '', '30', '', '.', '', ' ',
             '', 'Nxc5', '', ' ', '', 'Bc8', '', ' ', '', '31', '', '.', '',
             ' ', '', 'a5', '', ' ', '', 'Kg7', '', ' ', '', '32', '', '.', '',
             ' ', '', 'g3', '', ' ', '', 'Kf7', '', ' ', '', '33', '', '.', '',
             ' ', '', 'Bf4', '', ' ', '', 'Bg4', '', '\n', '', '34', '', '.',
             '', ' ', '', 'b4', '', ' ', '', '1/2-1/2', '', '\n', ''],
            ['', 'e4', '', 'c6', '', 'd4', '', 'd5', '', 'exd5', '', 'cxd5',
             '', 'c4', '', 'Nf6', '', 'c5', '', 'e6', '', 'Nc3', '', 'b6', '',
             'b4', '', 'a5', '', 'Bf4', '', 'axb4', '', 'Nb5', '', 'Na6', '',
             'Qa4', '', 'Bd7', '', 'Bc7', '', 'Nxc5', '', 'Qd1', '', 'Qc8', '',
             'dxc5', '', 'bxc5', '', 'Nf3', '', 'Qb7', '', 'Nd6', '', 'Bxd6',
             '', 'Bxd6', '', 'Qb6', '', 'Be5', '', 'Ke7', '', 'Be2', '', 'Ne4',
             '', 'O-O', '', 'f6', '', 'Bb2', '', 'Nc3', '', 'Bxc3', '', 'bxc3',
             '', 'Qd3', '', '(', '', 'Qb3', '', ')', '', 'Ra3', '', 'Rfb1', '',
             'Qa7', '', 'Qc2', '', 'g6', '', 'Rb3', '', 'd4', '', 'Bc4', '',
             'Rxb3', '', 'Bxb3', '', 'Qa6', '', 'a4', '', 'Rb8', '', 'a5', '',
             'e5', '', 'Bd5', '', 'Rb2', '', 'Qe4', '', 'Bf5', '', 'Qh4', '',
             'Qd3', '', '(', '', 'c2', '', '(', '', 'g5', '', ')', '', ')', '',
             'g4', '', 'Rb1', '', 'Rxb1', '', 'Qxb1', '', 'Kg2', '', 'Kd6', '',
             'Qxf6', '', 'Kxd5', '', 'Qxe5', '', 'Kc6', '', 'gxf5', '', 'Qxf5',
             '', 'Qe8', '', 'Kc7', '', 'Qe7', '', 'Kc8', '', 'Ne5', '', 'c2',
             '', 'Qxc5', '', 'Kd8', '', 'Qxd4', '', 'Ke8', '', 'Qe3', '',
             'Kf8', '', 'Kg3', '', 'Qc8', '', 'Nd3', '', 'Kg8', '', 'f4', '',
             'Qc6', '', 'Qb6', '', '1-0', ''],
            )
        self.gametokens_output = (
            ['1', '.', 'e4', 'Nf6', '2', '.', 'e5', 'Nd5', '3', '.', 'Nc3',
             'Nxc3', '4', '.', 'dxc3', 'Nc6', '5', '.', 'Nf3', 'd6', '6', '.',
             'Bb5', 'e6', '7', '.', 'Bf4', 'Be7', '8', '.\n', 'Qe2', 'a6', '9',
             '.', 'Bxc6+', 'bxc6', '10', '.', 'Rd1', 'd5', '11', '.', 'h4',
             'Bd7', '12', '.', 'Bg5', 'O-O', '13', '.', 'Rd4', 'f5', '14', '.',
             'exf6', 'gxf6', '\n', '15', '.', 'Bh6', 'Rf7', '16', '.', 'Rg4+',
             'Kh8', '17', '.', 'Rf4', 'Be8', '18', '.', 'Qxe6', 'Bd6', '19',
             '.', 'Rg4', 'Qe7', '20', '.', 'Qxe7', 'Rxe7+', '\n', '21', '.',
             'Kd2', 'Bd7', '22', '.', 'Ra4', 'c5', '23', '.', 'Ra5', 'Bb5',
             '24', '.', 'a4', 'Bd7', '25', '.', 'Re1', 'Rxe1', '26', '.',
             'Nxe1', 'c6', '27', '.', 'Nd3', '\n', 'Bc7', '28', '.', 'Rxc5',
             'Bb6', '29', '.', 'Be3', 'Bxc5', '30', '.', 'Nxc5', 'Bc8', '31',
             '.', 'a5', 'Kg7', '32', '.', 'g3', 'Kf7', '33', '.', 'Bf4', 'Bg4',
             '\n', '34', '.', 'b4', '1/2-1/2', '\n'],
            ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', 'Nf6', 'c5', 'e6',
             'Nc3', 'b6', 'b4', 'a5', 'Bf4', 'axb4', 'Nb5', 'Na6', 'Qa4',
             'Bd7', 'Bc7', 'Nxc5', 'Qd1', 'Qc8', 'dxc5', 'bxc5', 'Nf3', 'Qb7',
             'Nd6', 'Bxd6', 'Bxd6', 'Qb6', 'Be5', 'Ke7', 'Be2', 'Ne4', 'O-O',
             'f6', 'Bb2', 'Nc3', 'Bxc3', 'bxc3', 'Qd3', '(', 'Qb3', ')', 'Ra3',
             'Rfb1', 'Qa7', 'Qc2', 'g6', 'Rb3', 'd4', 'Bc4', 'Rxb3', 'Bxb3',
             'Qa6', 'a4', 'Rb8', 'a5', 'e5', 'Bd5', 'Rb2', 'Qe4', 'Bf5', 'Qh4',
             'Qd3', '(', 'c2', '(', 'g5', ')', ')', 'g4', 'Rb1', 'Rxb1',
             'Qxb1', 'Kg2', 'Kd6', 'Qxf6', 'Kxd5', 'Qxe5', 'Kc6', 'gxf5',
             'Qxf5', 'Qe8', 'Kc7', 'Qe7', 'Kc8', 'Ne5', 'c2', 'Qxc5', 'Kd8',
             'Qxd4', 'Ke8', 'Qe3', 'Kf8', 'Kg3', 'Qc8', 'Nd3', 'Kg8', 'f4',
             'Qc6', 'Qb6', '1-0'],
            )
        self.gametokens_output_abbrev = (
            ['e4', 'Nf6', 'e5', 'Nd5', 'Nc3', 'Nxc3', 'dxc3', 'Nc6', 'Nf3',
             'd6', 'Bb5', 'e6', 'Bf4', 'Be7', 'Qe2', 'a6', 'Bxc6+', 'bxc6',
             'Rd1', 'd5', 'h4', 'Bd7', 'Bg5', 'O-O', 'Rd4', 'f5', 'exf6',
             'gxf6', 'Bh6', 'Rf7', 'Rg4+', 'Kh8', 'Rf4', 'Be8', 'Qxe6', 'Bd6',
             'Rg4', 'Qe7', 'Qxe7', 'Rxe7+', 'Kd2', 'Bd7', 'Ra4', 'c5', 'Ra5',
             'Bb5', 'a4', 'Bd7', 'Re1', 'Rxe1', 'Nxe1', 'c6', 'Nd3', 'Bc7',
             'Rxc5', 'Bb6', 'Be3', 'Bxc5', 'Nxc5', 'Bc8', 'a5', 'Kg7', 'g3',
             'Kf7', 'Bf4', 'Bg4', 'b4', '1/2-1/2'],
            ['e4', 'c6', 'd4', 'd5', 'exd5', 'cxd5', 'c4', 'Nf6', 'c5', 'e6',
             'Nc3', 'b6', 'b4', 'a5', 'Bf4', 'axb4', 'Nb5', 'Na6', 'Qa4',
             'Bd7', 'Bc7', 'Nxc5', 'Qd1', 'Qc8', 'dxc5', 'bxc5', 'Nf3', 'Qb7',
             'Nd6', 'Bxd6', 'Bxd6', 'Qb6', 'Be5', 'Ke7', 'Be2', 'Ne4', 'O-O',
             'f6', 'Bb2', 'Nc3', 'Bxc3', 'bxc3', 'Qd3', '(', 'Qb3', ')', 'Ra3',
             'Rfb1', 'Qa7', 'Qc2', 'g6', 'Rb3', 'd4', 'Bc4', 'Rxb3', 'Bxb3',
             'Qa6', 'a4', 'Rb8', 'a5', 'e5', 'Bd5', 'Rb2', 'Qe4', 'Bf5', 'Qh4',
             'Qd3', '(', 'c2', '(', 'g5', ')', ')', 'g4', 'Rb1', 'Rxb1',
             'Qxb1', 'Kg2', 'Kd6', 'Qxf6', 'Kxd5', 'Qxe5', 'Kc6', 'gxf5',
             'Qxf5', 'Qe8', 'Kc7', 'Qe7', 'Kc8', 'Ne5', 'c2', 'Qxc5', 'Kd8',
             'Qxd4', 'Ke8', 'Qe3', 'Kf8', 'Kg3', 'Qc8', 'Nd3', 'Kg8', 'f4',
             'Qc6', 'Qb6', '1-0'],
            )
        self.moves_output = (
            ('FEN',
             None,
             ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0,
               12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
               12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
               1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9),
              0,
              15,
              None)),
            ('FEN',
             None,
             ((5, 7, 6, 4, 2, 6, 7, 5, 0, 0, 0, 0, 0, 0, 0, 0,
               12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
               12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
               1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 10, 8, 3, 10, 11, 9),
              0,
              15, None)),
            )
        self.moves_extract_output = (
            [('FEN', None), ('(?:[1-9][0-9]*)', 0), ('.', 1), (True, 2),
             (True, 3), ('(?:[1-9][0-9]*)', 4), ('.', 5), (True, 6), (True, 7),
             ('(?:[1-9][0-9]*)', 8), ('.', 9), (True, 10), (True, 11),
             ('(?:[1-9][0-9]*)', 12), ('.', 13), (True, 14), (True, 15),
             ('(?:[1-9][0-9]*)', 16), ('.', 17), (True, 18), (True, 19),
             ('(?:[1-9][0-9]*)', 20), ('.', 21), (True, 22), (True, 23),
             ('(?:[1-9][0-9]*)', 24), ('.', 25), (True, 26), (True, 27),
             ('(?:[1-9][0-9]*)', 28), ('.', 29), (True, 30), (True, 31),
             ('(?:[1-9][0-9]*)', 32), ('.', 33), (True, 34), (True, 35),
             ('(?:[1-9][0-9]*)', 36), ('.', 37), (True, 38), (True, 39),
             ('(?:[1-9][0-9]*)', 40), ('.', 41), (True, 42), (True, 43),
             ('(?:[1-9][0-9]*)', 44), ('.', 45), (True, 46), (True, 47),
             ('(?:[1-9][0-9]*)', 48), ('.', 49), (True, 50), (True, 51),
             ('(?:[1-9][0-9]*)', 52), ('.', 53), (True, 54), (True, 55),
             (None, 56), ('(?:[1-9][0-9]*)', 57), ('.', 58), (True, 59),
             (True, 60), ('(?:[1-9][0-9]*)', 61), ('.', 62), (True, 63),
             (True, 64), ('(?:[1-9][0-9]*)', 65), ('.', 66), (True, 67),
             (True, 68), ('(?:[1-9][0-9]*)', 69), ('.', 70), (True, 71),
             (True, 72), ('(?:[1-9][0-9]*)', 73), ('.', 74), (True, 75),
             (True, 76), ('(?:[1-9][0-9]*)', 77), ('.', 78), (True, 79),
             (True, 80), (None, 81), ('(?:[1-9][0-9]*)', 82), ('.', 83),
             (True, 84), (True, 85), ('(?:[1-9][0-9]*)', 86), ('.', 87),
             (True, 88), (True, 89), ('(?:[1-9][0-9]*)', 90), ('.', 91),
             (True, 92), (True, 93), ('(?:[1-9][0-9]*)', 94), ('.', 95),
             (True, 96), (True, 97), ('(?:[1-9][0-9]*)', 98), ('.', 99),
             (True, 100), (True, 101), ('(?:[1-9][0-9]*)', 102), ('.', 103),
             (True, 104), (True, 105), ('(?:[1-9][0-9]*)', 106), ('.', 107),
             (True, 108), (None, 109), (True, 110), ('(?:[1-9][0-9]*)', 111),
             ('.', 112), (True, 113), (True, 114), ('(?:[1-9][0-9]*)', 115),
             ('.', 116), (True, 117), (True, 118), ('(?:[1-9][0-9]*)', 119),
             ('.', 120), (True, 121), (True, 122), ('(?:[1-9][0-9]*)', 123),
             ('.', 124), (True, 125), (True, 126), ('(?:[1-9][0-9]*)', 127),
             ('.', 128), (True, 129), (True, 130), ('(?:[1-9][0-9]*)', 131),
             ('.', 132), (True, 133), (True, 134), (None, 135),
             ('(?:[1-9][0-9]*)', 136), ('.', 137), (True, 138), ('*', 139),
             (None, 140)],
            [('FEN', None), (True, 0), (True, 1), (True, 2), (True, 3),
             (True, 4), (True, 5), (True, 6), (True, 7), (True, 8), (True, 9),
             (True, 10), (True, 11), (True, 12), (True, 13), (True, 14),
             (True, 15), (True, 16), (True, 17), (True, 18), (True, 19),
             (True, 20), (True, 21), (True, 22), (True, 23), (True, 24),
             (True, 25), (True, 26), (True, 27), (True, 28), (True, 29),
             (True, 30), (True, 31), (True, 32), (True, 33), (True, 34),
             (True, 35), (True, 36), (True, 37), (True, 38), (True, 39),
             (True, 40), (True, 41), (True, 42), ('(', 43), (True, 44),
             (')', 45), (True, 46), (True, 47), (True, 48), (True, 49),
             (True, 50), (True, 51), (True, 52), (True, 53), (True, 54),
             (True, 55), (True, 56), (True, 57), (True, 58), (True, 59),
             (True, 60), (True, 61), (True, 62), (True, 63), (True, 64),
             (True, 65), (True, 66), ('(', 67), (True, 68), ('(', 69),
             (True, 70), (')', 71), (')', 72), (True, 73), (True, 74),
             (True, 75), (True, 76), (True, 77), (True, 78), (True, 79),
             (True, 80), (True, 81), (True, 82), (True, 83), (True, 84),
             (True, 85), (True, 86), (True, 87), (True, 88), (True, 89),
             (True, 90), (True, 91), (True, 92), (True, 93), (True, 94),
             (True, 95), (True, 96), (True, 97), (True, 98), (True, 99),
             (True, 100), (True, 101), (True, 102), (True, 103), ('*', 104)],
            )

    def tearDown(self):
        pass

    def test__raises(self):
        """"""
        pass

    def test__copy(self):
        """"""
        pass

    def test__assumptions(self):
        """"""
        msg = 'Failure of this test invalidates all other tests'

    def test_process_games_pgne(self):
        """"""
        pgn = self.pgne
        for e, g in enumerate(self.games):
            pgn.extract_first_game(g)
            pgn.process_game()
            self.assertEqual(True, pgn._tags_valid)
            self.assertEqual(True, pgn._movetext_valid)
            self.assertEqual(True, pgn.is_tag_roster_valid())
            self.assertEqual(True, pgn.is_movetext_valid())
            self.assertEqual(self.tag_string_output[e], pgn._tag_string)
            self.assertEqual(self.tags_output[e], pgn.tags)
            self.assertEqual(self.tags_in_order_output[e], pgn.tags_in_order)
            self.assertEqual(self.tokens_output[e], pgn.tokens)
            self.assertEqual(self.gametokens_output[e], pgn.gametokens)
            self.assertEqual(len(pgn.moves), len(pgn.gametokens) + 1)
            self.assertEqual(self.moves_output[e], pgn.moves[0])
            s = []
            for t, n, b in pgn.moves:
                s.append((t, n))
            self.assertEqual(self.moves_extract_output[e], s)
            self.assertTrue(not hasattr(pgn, 'positions'))
            self.assertTrue(not hasattr(pgn, 'piecesquaremoves'))

    def test_process_games_pgnd(self):
        """"""
        pgn = self.pgnd
        for e, g in enumerate(self.games):
            pgn.extract_first_game(g)
            pgn.process_game()
            self.assertEqual(True, pgn._tags_valid)
            self.assertEqual(True, pgn._movetext_valid)
            self.assertEqual(True, pgn.is_tag_roster_valid())
            self.assertEqual(True, pgn.is_movetext_valid())
            self.assertEqual(self.tag_string_output[e], pgn._tag_string)
            self.assertEqual(self.tags_output[e], pgn.tags)
            self.assertEqual(self.tags_in_order_output[e], pgn.tags_in_order)
            self.assertEqual(self.tokens_output[e], pgn.tokens)
            self.assertEqual(self.gametokens_output[e], pgn.gametokens)
            self.assertEqual(len(pgn.moves), len(pgn.gametokens) + 1)
            self.assertEqual(self.moves_output[e], pgn.moves[0])
            s = []
            for t, n, b in pgn.moves:
                s.append((t, n))
            self.assertEqual(self.moves_extract_output[e], s)
            self.assertTrue(not hasattr(pgn, 'positions'))
            self.assertTrue(not hasattr(pgn, 'piecesquaremoves'))

    def test_process_games_pgndm(self):
        """"""
        moves_extract_output = (
            [('FEN', None), (True, 0), (True, 1), (True, 2), (True, 3),
             (True, 4), (True, 5), (True, 6), (True, 7), (True, 8), (True, 9),
             (True, 10), (True, 11), (True, 12), (True, 13), (True, 14),
             (True, 15), (True, 16), (True, 17), (True, 18), (True, 19),
             (True, 20), (True, 21), (True, 22), (True, 23), (True, 24),
             (True, 25), (True, 26), (True, 27), (True, 28), (True, 29),
             (True, 30), (True, 31), (True, 32), (True, 33), (True, 34),
             (True, 35), (True, 36), (True, 37), (True, 38), (True, 39),
             (True, 40), (True, 41), (True, 42), (True, 43), (True, 44),
             (True, 45), (True, 46), (True, 47), (True, 48), (True, 49),
             (True, 50), (True, 51), (True, 52), (True, 53), (True, 54),
             (True, 55), (True, 56), (True, 57), (True, 58), (True, 59),
             (True, 60), (True, 61), (True, 62), (True, 63), (True, 64),
             (True, 65), (True, 66), ('*', 67)],
            [('FEN', None), (True, 0), (True, 1), (True, 2), (True, 3),
             (True, 4), (True, 5), (True, 6), (True, 7), (True, 8), (True, 9),
             (True, 10), (True, 11), (True, 12), (True, 13), (True, 14),
             (True, 15), (True, 16), (True, 17), (True, 18), (True, 19),
             (True, 20), (True, 21), (True, 22), (True, 23), (True, 24),
             (True, 25), (True, 26), (True, 27), (True, 28), (True, 29),
             (True, 30), (True, 31), (True, 32), (True, 33), (True, 34),
             (True, 35), (True, 36), (True, 37), (True, 38), (True, 39),
             (True, 40), (True, 41), (True, 42), ('(', 43), (True, 44),
             (')', 45), (True, 46), (True, 47), (True, 48), (True, 49),
             (True, 50), (True, 51), (True, 52), (True, 53), (True, 54),
             (True, 55), (True, 56), (True, 57), (True, 58), (True, 59),
             (True, 60), (True, 61), (True, 62), (True, 63), (True, 64),
             (True, 65), (True, 66), ('(', 67), (True, 68), ('(', 69),
             (True, 70), (')', 71), (')', 72), (True, 73), (True, 74),
             (True, 75), (True, 76), (True, 77), (True, 78), (True, 79),
             (True, 80), (True, 81), (True, 82), (True, 83), (True, 84),
             (True, 85), (True, 86), (True, 87), (True, 88), (True, 89),
             (True, 90), (True, 91), (True, 92), (True, 93), (True, 94),
             (True, 95), (True, 96), (True, 97), (True, 98), (True, 99),
             (True, 100), (True, 101), (True, 102), (True, 103), ('*', 104)],
            )
        pgn = self.pgndm
        for e, g in enumerate(self.games):
            pgn.extract_first_game(g)
            pgn.process_game()
            self.assertEqual(True, pgn._tags_valid)
            self.assertEqual(True, pgn._movetext_valid)
            self.assertEqual(True, pgn.is_tag_roster_valid())
            self.assertEqual(True, pgn.is_movetext_valid())
            self.assertEqual(self.tag_string_output[e], pgn._tag_string)
            self.assertEqual(self.tags_output[e], pgn.tags)
            self.assertEqual(self.tags_in_order_output[e], pgn.tags_in_order)
            self.assertEqual(self.tokens_output[e], pgn.tokens)
            self.assertEqual(self.gametokens_output_abbrev[e], pgn.gametokens)
            self.assertEqual(len(pgn.moves), len(pgn.gametokens) + 1)
            self.assertEqual(self.moves_output[e], pgn.moves[0])
            s = []
            for t, n, b in pgn.moves:
                s.append((t, n))
            self.assertEqual(moves_extract_output[e], s)
            self.assertTrue(not hasattr(pgn, 'positions'))
            self.assertTrue(not hasattr(pgn, 'piecesquaremoves'))

    def test_process_games_pgnt(self):
        """"""
        pgn = self.pgnt
        for e, g in enumerate(self.games):
            pgn.extract_first_game(g)
            pgn.process_game()
            self.assertEqual(True, pgn._tags_valid)
            self.assertEqual(True, pgn._movetext_valid)
            self.assertEqual(True, pgn.is_tag_roster_valid())
            self.assertEqual(False, pgn.is_movetext_valid())
            self.assertEqual(self.tag_string_output[e], pgn._tag_string)
            self.assertEqual(self.tags_output[e], pgn.tags)
            self.assertEqual(self.tags_in_order_output[e], pgn.tags_in_order)
            self.assertEqual(self.tokens_output[e], pgn.tokens)
            self.assertEqual([], pgn.gametokens)
            self.assertTrue(not hasattr(pgn, 'moves'))
            self.assertTrue(not hasattr(pgn, 'positions'))
            self.assertTrue(not hasattr(pgn, 'piecesquaremoves'))

    def test_process_games_pgnu(self):
        """"""
        positions_output = (
            ['\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Á\x01Æ\x02;\x02x\x02\x7f\x02º\x02½\x02ù\x02þ\x08\t\n\x0b\r\x0e\x0f\x1cpqrstuvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Á\x01Æ\x02;\x02x\x02\x7f\x02º\x02½\x02í\x02ù\x08\t\n\x0b\r\x0e\x0f\x1cpqrstuvw\x84ü\x06', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Á\x01Æ\x02;\x02x\x02\x7f\x02º\x02½\x02í\x02ù\x08\t\n\x0b\r\x0e\x0f$pqrstuvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Á\x01Æ\x02;\x02x\x02\x7f\x02º\x02½\x02ã\x02ù\x08\t\n\x0b\r\x0e\x0f$pqrstuvw\x84ü\x06', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Æ\x01Ò\x02;\x02x\x02\x7f\x02º\x02½\x02ã\x02ù\x08\t\n\x0b\r\x0e\x0f$pqrstuvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Æ\x02;\x02x\x02\x7f\x02º\x02½\x02Ò\x02ù\x08\t\n\x0b\r\x0e\x0f$pqrstuvw\x84ü\x06', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Æ\x02;\x02x\x02\x7f\x02º\x02½\x02ù\x08\t\n\r\x0e\x0f\x12$pqrstuvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Æ\x02;\x02x\x02\x7f\x02º\x02½\x02ê\x08\t\n\r\x0e\x0f\x12$pqrstuvw\x84ü\x06', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Õ\x02;\x02x\x02\x7f\x02º\x02½\x02ê\x08\t\n\r\x0e\x0f\x12$pqrstuvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Õ\x02;\x02x\x02\x7f\x02º\x02½\x02ê\x08\t\n\r\x0e\x0f\x12$kpqrtuvw\x84ü\x06', '\x01\x03\x01@\x01G\x01\x82\x01¡\x01Õ\x02;\x02x\x02\x7f\x02º\x02½\x02ê\x08\t\n\r\x0e\x0f\x12$kpqrtuvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x82\x01¡\x01Õ\x02;\x02x\x02\x7f\x02º\x02½\x02ê\x08\t\n\r\x0e\x0f\x12$klpqruvw\x84ü\x06', '\x01\x03\x01@\x01G\x01\x9d\x01¡\x01Õ\x02;\x02x\x02\x7f\x02º\x02½\x02ê\x08\t\n\r\x0e\x0f\x12$klpqruvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x9d\x01¡\x01Õ\x02;\x02x\x02\x7f\x02´\x02º\x02ê\x08\t\n\r\x0e\x0f\x12$klpqruvw\x84ü\x06', '\x01\x0c\x01@\x01G\x01\x9d\x01¡\x01Õ\x02;\x02x\x02\x7f\x02´\x02º\x02ê\x08\t\n\r\x0e\x0f\x12$klpqruvw\x84ü\x07', '\x01\x0c\x01@\x01G\x01\x9d\x01¡\x01Õ\x02;\x02x\x02\x7f\x02´\x02º\x02ê\x08\t\n\r\x0e\x0f\x12$hklqruvw\x84ü\x06', '\x01\x0c\x01@\x01G\x01\x9d\x01ª\x01Õ\x02;\x02x\x02\x7f\x02´\x02º\x08\t\n\r\x0e\x0f\x12$hklqruvw\x84ü\x07', '\x01\x0c\x01@\x01G\x01\x9d\x01Õ\x02;\x02x\x02\x7f\x02´\x02º\x08\t\n\r\x0e\x0f\x12$hjklruvw\x84ü\x06', '\x01\x0c\x01C\x01G\x01\x9d\x01Õ\x02;\x02x\x02\x7f\x02´\x02º\x08\t\n\r\x0e\x0f\x12$hjklruvw\x84ü\x07', '\x01\x0c\x01C\x01G\x01\x9d\x01Õ\x02;\x02x\x02\x7f\x02´\x02º\x08\t\n\r\x0e\x0f\x12$chjlruvw\x84ü\x06', '\x01\x0c\x01C\x01G\x01\x9d\x01Õ\x02;\x02x\x02\x7f\x02´\x02º\x08\t\n\r\x0e\x12\x1f$chjlruvw\x84ü\x07', '\x01\x0c\x01C\x01G\x01\x9d\x01Õ\x02;\x02x\x02\x7f\x02³\x02´\x08\t\n\r\x0e\x12\x1f$chjlruvw\x84ü\x06', '\x01\x0c\x01C\x01G\x01¦\x01Õ\x02;\x02x\x02\x7f\x02³\x02´\x08\t\n\r\x0e\x12\x1f$chjlruvw\x84ü\x07', '\x01\x0c\x01C\x01G\x01¦\x01Õ\x02;\x02x\x02}\x02³\x02´\x08\t\n\r\x0e\x12\x1f$chjlruvw\x84þ\x06', '\x01\x0c\x01G\x01[\x01¦\x01Õ\x02;\x02x\x02}\x02³\x02´\x08\t\n\r\x0e\x12\x1f$chjlruvw\x84þ\x07', '\x01\x0c\x01G\x01[\x01¦\x01Õ\x02;\x02x\x02}\x02³\x02´\x08\t\n\r\x0e\x12\x1f$cehjlrvw\x84þ\x06', '\x01\x0c\x01G\x01[\x01¦\x01Õ\x02;\x02x\x02}\x02³\x02´\x08\t\n\r\x0e\x12\x1f-chjlrvw\x84þ\x07', '\x01\x0c\x01G\x01[\x01¦\x01Õ\x02;\x02x\x02}\x02³\x02´\x08\t\n\r\x0e\x12\x1fchjlmrw\x84þ\x06', '\x01\x0c\x01G\x01[\x01¯\x01Õ\x02;\x02x\x02}\x02³\x02´\x08\t\n\r\x0e\x12\x1fchjlmrw\x84þ\x07', '\x01\x0c\x01G\x01[\x01¯\x01Õ\x02;\x02u\x02x\x02³\x02´\x08\t\n\r\x0e\x12\x1fchjlmrw\x84þ\x06', '\x01\x0c\x01G\x01^\x01¯\x01Õ\x02;\x02u\x02x\x02³\x02´\x08\t\n\r\x0e\x12\x1fchjlmrw\x84þ\x07', '\x01\x0c\x01G\x01^\x01¯\x01Õ\x02;\x02u\x02x\x02³\x02´\x08\t\n\r\x0e\x12\x1fchjlmrw\x84ÿ\x06', '\x01\x0c\x01G\x01]\x01¯\x01Õ\x02;\x02u\x02x\x02³\x02´\x08\t\n\r\x0e\x12\x1fchjlmrw\x84ÿ\x07', '\x01\x0c\x01G\x01]\x01¯\x01Õ\x02;\x02u\x02x\x02´\x02¼\x08\t\n\r\x0e\x12\x1fchjlmrw\x84ÿ\x06', '\x01,\x01G\x01]\x01¯\x01Õ\x02;\x02u\x02x\x02´\x02¼\x08\t\n\r\x0e\x12\x1fchjmrw\x84ÿ\x07', '\x01,\x01G\x01]\x01¯\x01Õ\x02;\x02u\x02x\x02«\x02¼\x08\t\n\r\x0e\x12\x1fchjmrw\x84ÿ\x06', '\x01,\x01G\x01^\x01¯\x01Õ\x02;\x02u\x02x\x02«\x02¼\x08\t\n\r\x0e\x12\x1fchjmrw\x84ÿ\x07', '\x01,\x01G\x01^\x01¯\x01Õ\x024\x02u\x02x\x02«\x02¼\x08\t\n\r\x0e\x12\x1fchjmrw\x84ÿ\x06', '\x014\x01G\x01^\x01¯\x01Õ\x02u\x02x\x02«\x02¼\x08\t\n\r\x0e\x12\x1fchjmrw\x84ÿ\x07', '\x01G\x01^\x01¯\x01Õ\x02t\x02x\x02«\x02¼\x08\t\n\r\x0e\x12\x1fchjmrw\x84ÿ\x06', '\x01G\x01^\x01¯\x01Õ\x02t\x02x\x02«\x02¼\x08\t\n\r\x0e\x12\x1fchjmrw\x8bÿ\x07', '\x01G\x01^\x01¯\x01Õ\x02t\x02x\x02«\x02³\x08\t\n\r\x0e\x12\x1fchjmrw\x8bÿ\x06', '\x01G\x01X\x01¯\x01Õ\x02t\x02x\x02«\x02³\x08\t\n\r\x0e\x12\x1fchjmrw\x8bÿ\x07', '\x01G\x01X\x01¯\x01Õ\x02t\x02x\x02«\x02³\x08\t\n\r\x0e\x12\x1fbchmrw\x8bÿ\x06', '\x01G\x01`\x01¯\x01Õ\x02t\x02x\x02«\x02³\x08\t\n\r\x0e\x12\x1fbchmrw\x8bÿ\x07', '\x01G\x01`\x01¯\x01Õ\x02t\x02x\x02¡\x02«\x08\t\n\r\x0e\x12\x1fbchmrw\x8bÿ\x06', '\x01G\x01`\x01¯\x01Õ\x02t\x02x\x02¡\x02«\t\n\r\x0e\x12\x18\x1fbchmrw\x8bÿ\x07', '\x01G\x01`\x01¯\x01Õ\x02t\x02x\x02«\x02³\t\n\r\x0e\x12\x18\x1fbchmrw\x8bÿ\x06', '\x01D\x01`\x01¯\x01Õ\x02t\x02x\x02«\x02³\t\n\r\x0e\x12\x18\x1fbchmrw\x8bÿ\x07', '\x01`\x01¯\x01Õ\x02D\x02x\x02«\x02³\t\n\r\x0e\x12\x18\x1fbchmrw\x8bÿ\x06', '\x01`\x01¯\x01Ä\x02x\x02«\x02³\t\n\r\x0e\x12\x18\x1fbchmrw\x8bÿ\x07', '\x01`\x01¯\x01Ä\x02x\x02«\x02³\t\n\r\x0e\x12\x18\x1fbchjmw\x8bÿ\x06', '\x01`\x01¯\x01Ó\x02x\x02«\x02³\t\n\r\x0e\x12\x18\x1fbchjmw\x8bÿ\x07', '\x01`\x01¯\x01Ó\x02x\x02²\x02³\t\n\r\x0e\x12\x18\x1fbchjmw\x8bÿ\x06', '\x01b\x01¯\x01Ó\x02x\x02²\x02³\t\n\r\x0e\x12\x18\x1fchjmw\x8bÿ\x07', '\x01b\x01¯\x01Ó\x02x\x02©\x02³\t\n\r\x0e\x12\x18\x1fchjmw\x8bÿ\x06', '\x01b\x01\x94\x01Ó\x02x\x02©\x02³\t\n\r\x0e\x12\x18\x1fchjmw\x8bÿ\x07', '\x01\x94\x01Ó\x02x\x02¢\x02³\t\n\r\x0e\x12\x18\x1fchjmw\x8bÿ\x06', '\x01\x94\x01â\x02x\x02³\t\n\r\x0e\x12\x18\x1fchjmw\x8bÿ\x07', '\x01\x94\x01â\x02x\x02º\t\n\r\x0e\x12\x18\x1fchjmw\x8bÿ\x06', '\x01\x94\x01â\x02x\x02º\t\n\r\x0e\x12\x1f chjmw\x8bÿ\x07', '\x01\x94\x01â\x02x\x02º\t\n\r\x0e\x12\x1f chjmw\x8bö\x06', '\x01\x94\x01â\x02x\x02º\t\n\r\x12\x16\x1f chjmw\x8bö\x07', '\x01\x94\x01â\x02x\x02º\t\n\r\x12\x16\x1f chjmw\x8bõ\x06', '\x01\x9d\x01â\x02x\x02º\t\n\r\x12\x16\x1f chjmw\x8bõ\x07', '\x01\x9d\x01â\x02x\x02\x9e\t\n\r\x12\x16\x1f chjmw\x8bõ\x06', '\x01\x9d\x01â\x02x\x02\x9e\n\r\x12\x16\x19\x1f chjmw\x8bõ\x07'],
            ['\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Á\x01Æ\x02;\x02x\x02\x7f\x02º\x02½\x02ù\x02þ\x08\t\n\x0b\r\x0e\x0f\x1cpqrstuvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Á\x01Æ\x02;\x02x\x02\x7f\x02º\x02½\x02ù\x02þ\x08\t\n\x0b\r\x0e\x0f\x1cjpqstuvw\x84ü\x06', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Á\x01Æ\x02;\x02x\x02\x7f\x02º\x02½\x02ù\x02þ\x08\t\n\r\x0e\x0f\x1b\x1cjpqstuvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Á\x01Æ\x02;\x02x\x02\x7f\x02º\x02½\x02ù\x02þ\x08\t\n\r\x0e\x0f\x1b\x1ccjpqtuvw\x84ü\x06', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Á\x01Æ\x02;\x02x\x02\x7f\x02º\x02½\x02ù\x02þ\x08\t\n\r\x0e\x0f\x1b#jpqtuvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Á\x01Æ\x02;\x02x\x02\x7f\x02º\x02½\x02ù\x02þ\x08\t\n\r\x0e\x0f\x1bcpqtuvw\x84ü\x06', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Á\x01Æ\x02;\x02x\x02\x7f\x02º\x02½\x02ù\x02þ\x08\t\r\x0e\x0f\x1a\x1bcpqtuvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Á\x01Æ\x02;\x02x\x02\x7f\x02º\x02½\x02í\x02ù\x08\t\r\x0e\x0f\x1a\x1bcpqtuvw\x84ü\x06', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Á\x01Æ\x02;\x02x\x02\x7f\x02º\x02½\x02í\x02ù\x08\t\r\x0e\x0f\x1b"cpqtuvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Á\x01Æ\x02;\x02x\x02\x7f\x02º\x02½\x02í\x02ù\x08\t\r\x0e\x0f\x1b"clpquvw\x84ü\x06', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Æ\x01Ò\x02;\x02x\x02\x7f\x02º\x02½\x02í\x02ù\x08\t\r\x0e\x0f\x1b"clpquvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Æ\x01Ò\x02;\x02x\x02\x7f\x02º\x02½\x02í\x02ù\x08\t\r\x0e\x0f\x1b"cilpuvw\x84ü\x06', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Æ\x01Ò\x02;\x02x\x02\x7f\x02º\x02½\x02í\x02ù\x08\r\x0e\x0f\x19\x1b"cilpuvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x82\x01\x85\x01Æ\x01Ò\x02;\x02x\x02\x7f\x02º\x02½\x02í\x02ù\x08\r\x0e\x0f\x19\x1b"`ciluvw\x84ü\x06', '\x01\x03\x01@\x01G\x01\x85\x01\x9d\x01Æ\x01Ò\x02;\x02x\x02\x7f\x02º\x02½\x02í\x02ù\x08\r\x0e\x0f\x19\x1b"`ciluvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x85\x01\x9d\x01Æ\x01Ò\x02;\x02x\x02\x7f\x02º\x02½\x02í\x02ù\x08\r\x0e\x0f\x1b"Yciluvw\x84ü\x06', '\x01\x03\x01@\x01G\x01\x85\x01\x9d\x01Æ\x01á\x02;\x02x\x02\x7f\x02º\x02½\x02í\x02ù\x08\r\x0e\x0f\x1b"Yciluvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x85\x01\x9d\x01Æ\x01á\x02;\x02x\x02\x7f\x02º\x02½\x02è\x02í\x08\r\x0e\x0f\x1b"Yciluvw\x84ü\x06', '\x01\x18\x01@\x01G\x01\x85\x01\x9d\x01Æ\x01á\x02;\x02x\x02\x7f\x02º\x02½\x02è\x02í\x08\r\x0e\x0f\x1b"Yciluvw\x84ü\x07', '\x01\x18\x01@\x01G\x01\x85\x01\x9d\x01Æ\x01á\x02;\x02x\x02\x7f\x02³\x02½\x02è\x02í\x08\r\x0e\x0f\x1b"Yciluvw\x84ü\x06', '\x01\x18\x01@\x01G\x01\x85\x01²\x01Æ\x01á\x02;\x02x\x02\x7f\x02³\x02½\x02è\x02í\x08\r\x0e\x0f\x1b"Yciluvw\x84ü\x07', '\x01\x18\x01@\x01G\x01\x85\x01²\x01Æ\x01á\x02;\x02x\x02\x7f\x02³\x02½\x02â\x02í\x08\r\x0e\x0f\x1bYciluvw\x84ü\x06', '\x01\x03\x01@\x01G\x01\x85\x01²\x01Æ\x01á\x02;\x02x\x02\x7f\x02³\x02½\x02â\x02í\x08\r\x0e\x0f\x1bYciluvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x85\x01²\x01Æ\x01á\x02:\x02x\x02\x7f\x02³\x02½\x02â\x02í\x08\r\x0e\x0f\x1bYciluvw\x84ü\x06', '\x01\x03\x01@\x01G\x01\x85\x01²\x01Æ\x01á\x02:\x02x\x02\x7f\x02³\x02½\x02í\x08\r\x0e\x0f"Yciluvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x85\x01²\x01Æ\x01á\x02:\x02x\x02\x7f\x02³\x02½\x02í\x08\r\x0e\x0fYbcluvw\x84ü\x06', '\x01\x03\x01@\x01G\x01\x85\x01²\x01Õ\x01á\x02:\x02x\x02\x7f\x02³\x02½\x02í\x08\r\x0e\x0fYbcluvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x85\x01²\x01Õ\x01á\x021\x02x\x02\x7f\x02³\x02½\x02í\x08\r\x0e\x0fYbcluvw\x84ü\x06', '\x01\x03\x01@\x01G\x01\x85\x01²\x01Õ\x01ë\x021\x02x\x02\x7f\x02³\x02½\x02í\x08\r\x0e\x0fYbcluvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x85\x01²\x01Õ\x021\x02x\x02\x7f\x02«\x02³\x02í\x08\r\x0e\x0fYbcluvw\x84ü\x06', '\x01\x03\x01@\x01G\x01\x85\x01«\x01Õ\x021\x02x\x02\x7f\x02³\x02í\x08\r\x0e\x0fYbcluvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x85\x01«\x01Õ\x02)\x02x\x02\x7f\x02³\x02í\x08\r\x0e\x0fYbcluvw\x84ü\x06', '\x01\x03\x01@\x01G\x01\x85\x01¤\x01Õ\x02)\x02x\x02\x7f\x02³\x02í\x08\r\x0e\x0fYbcluvw\x84ü\x07', '\x01\x03\x01@\x01G\x01\x85\x01¤\x01Õ\x02)\x02x\x02\x7f\x02³\x02í\x08\r\x0e\x0fYbcluvw\x84ô\x06', '\x01\x03\x01@\x01G\x01\x8c\x01¤\x01Õ\x02)\x02x\x02\x7f\x02³\x02í\x08\r\x0e\x0fYbcluvw\x84ô\x07', '\x01\x03\x01@\x01G\x01\x8c\x01¤\x01Õ\x02)\x02x\x02\x7f\x02³\x02Ü\x08\r\x0e\x0fYbcluvw\x84ô\x06', '\x01\x03\x01@\x01E\x01\x8c\x01¤\x01Õ\x02)\x02x\x02\x7f\x02³\x02Ü\x08\r\x0e\x0fYbcluvw\x86ô\x07', '\x01\x03\x01@\x01E\x01\x8c\x01¤\x01Õ\x02)\x02x\x02\x7f\x02³\x02Ü\x08\r\x0e\x0fYbclmvw\x86ô\x06', '\x01\x03\x01@\x01E\x01\x89\x01\x8c\x01Õ\x02)\x02x\x02\x7f\x02³\x02Ü\x08\r\x0e\x0fYbclmvw\x86ô\x07', '\x01\x03\x01@\x01E\x01\x89\x01\x8c\x01Õ\x02)\x02x\x02\x7f\x02³\x02Ò\x08\r\x0e\x0fYbclmvw\x86ô\x06', '\x01\x03\x01@\x01E\x01\x8c\x01\x92\x01Õ\x02)\x02x\x02\x7f\x02³\x08\r\x0e\x0fYbclmvw\x86ô\x07', '\x01\x03\x01@\x01E\x01\x8c\x01Õ\x02)\x02x\x02\x7f\x02³\x08\r\x0e\x0fRbclmvw\x86ô\x06', '\x01\x13\x01@\x01E\x01\x8c\x01Õ\x02)\x02x\x02\x7f\x02³\x08\r\x0e\x0fRbclmvw\x86ô\x07', '\x01\x11\x01@\x01E\x01\x8c\x01Õ\x02)\x02x\x02\x7f\x02³\x08\r\x0e\x0fRbclmvw\x86ô\x07', '\x01\x13\x01@\x01E\x01\x8c\x01Õ\x02)\x02P\x02\x7f\x02³\x08\r\x0e\x0fRbclmvw\x86ô\x06', '\x01\x13\x01@\x01A\x01\x8c\x01Õ\x02)\x02P\x02\x7f\x02³\x08\r\x0e\x0fRbclmvw\x86ô\x07', '\x01\x13\x01@\x01A\x01\x8c\x01Õ\x020\x02P\x02\x7f\x02³\x08\r\x0e\x0fRbclmvw\x86ô\x06', '\x01\n\x01@\x01A\x01\x8c\x01Õ\x020\x02P\x02\x7f\x02³\x08\r\x0e\x0fRbclmvw\x86ô\x07', '\x01\n\x01@\x01A\x01\x8c\x01Õ\x020\x02P\x02\x7f\x02³\x08\r\x0e\x0fRbclmnw\x86ô\x06', '\x01\n\x01@\x01Q\x01\x8c\x01Õ\x020\x02P\x02\x7f\x02³\x08\r\x0e\x0fRbclmnw\x86ô\x07', '\x01\n\x01@\x01Q\x01\x8c\x01Õ\x020\x02P\x02\x7f\x02³\x08\r\x0e\x0fR[blmnw\x86ô\x06', '\x01\n\x01@\x01Q\x01\x9a\x01Õ\x020\x02P\x02\x7f\x02³\x08\r\x0e\x0fR[blmnw\x86ô\x07', '\x01\n\x01@\x01\x9a\x01Õ\x020\x02Q\x02\x7f\x02³\x08\r\x0e\x0fR[blmnw\x86ô\x06', '\x01\n\x01@\x01\x91\x01Õ\x020\x02\x7f\x02³\x08\r\x0e\x0fR[blmnw\x86ô\x07', '\x01\n\x01@\x01\x91\x01Õ\x02(\x02\x7f\x02³\x08\r\x0e\x0fR[blmnw\x86ô\x06', '\x01\n\x01@\x01\x91\x01Õ\x02(\x02\x7f\x02³\r\x0e\x0f\x18R[blmnw\x86ô\x07', '\x01\n\x01@\x01\x91\x01Õ\x02(\x02y\x02³\r\x0e\x0f\x18R[blmnw\x86ô\x06', '\x01\n\x01@\x01\x91\x01Õ\x02(\x02y\x02³\r\x0e\x0f R[blmnw\x86ô\x07', '\x01\n\x01@\x01\x91\x01Õ\x02(\x02y\x02³\r\x0e\x0f R[bdmnw\x86ô\x06', '\x01\n\x01@\x01£\x01Õ\x02(\x02y\x02³\r\x0e\x0f R[bdmnw\x86ô\x07', '\x01\n\x01@\x01£\x01Õ\x02(\x02I\x02³\r\x0e\x0f R[bdmnw\x86ô\x06', '\x01\x1c\x01@\x01£\x01Õ\x02(\x02I\x02³\r\x0e\x0f R[bdmnw\x86ô\x07', '\x01\x1c\x01@\x01£\x01Õ\x02(\x02I\x02¥\r\x0e\x0f R[bdmnw\x86ô\x06', '\x01\x1f\x01@\x01£\x01Õ\x02(\x02I\x02¥\r\x0e\x0f R[bdmnw\x86ô\x07', '\x01\x1f\x01@\x01£\x01Õ\x02\x13\x02I\x02¥\r\x0e\x0f R[bdmnw\x86ô\x06', '\x01\x1f\x01@\x01£\x01Õ\x02(\x02I\x02¥\r\x0e\x0f J[bdmnw\x86ô\x06', '\x01\x1f\x01@\x01£\x01Õ\x02(\x02I\x02¥\r\x0e\x0f R[bdfmw\x86ô\x06', '\x01\x1f\x01@\x01£\x01Õ\x02\x13\x02I\x02¥\r\x0f\x1e R[bdmnw\x86ô\x07', '\x01\x1f\x01@\x01£\x01Õ\x02\x13\x02A\x02¥\r\x0f\x1e R[bdmnw\x86ô\x06', '\x01\x1f\x01A\x01£\x01Õ\x02\x13\x02¥\r\x0f\x1e R[bdmnw\x86ô\x07', '\x01\x1f\x01£\x01Õ\x02\x01\x02¥\r\x0f\x1e R[bdmnw\x86ô\x06', '\x01\x1f\x01£\x01Õ\x02\x01\x02¥\r\x0f\x1e R[bdmnw\x8eô\x07', '\x01\x1f\x01£\x01Õ\x02\x01\x02¥\r\x0f\x1e R[bdmnw\x8eë\x06', '\x01-\x01£\x01Õ\x02\x01\x02¥\r\x0f\x1e R[bdnw\x8eë\x07', '\x01-\x01Õ\x02\x01\x02¥\r\x0f\x1e R[bdnw\x8eã\x06', '\x01$\x01Õ\x02\x01\x02¥\r\x0f\x1e R[bnw\x8eã\x07', '\x01$\x01Õ\x02\x01\x02¥\r\x0f\x1e R[bnw\x8eê\x06', '\x01$\x01Õ\x02\x01\r\x0f %R[bnw\x8eê\x07', '\x01$\x01Õ\x02%\r\x0f R[bnw\x8eê\x06', '\x01<\x01Õ\x02%\r\x0f R[bnw\x8eê\x07', '\x01<\x01Õ\x02%\r\x0f R[bnw\x8eò\x06', '\x014\x01Õ\x02%\r\x0f R[bnw\x8eò\x07', '\x014\x01Õ\x02%\r\x0f R[bnw\x8eú\x06', '\x014\x01ä\x02%\r\x0f R[bnw\x8eú\x07', '\x014\x01ä\x02%\r\x0f J[bnw\x8eú\x06', '\x01"\x01ä\x02%\r\x0f J[nw\x8eú\x07', '\x01"\x01ä\x02%\r\x0f J[nw\x8eû\x06', '\x01\x1b\x01ä\x02%\r\x0f Jnw\x8eû\x07', '\x01\x1b\x01ä\x02%\r\x0f Jnw\x8eü\x06', '\x01\x14\x01ä\x02%\r\x0f Jnw\x8eü\x07', '\x01\x14\x01ä\x02%\r\x0f Jnw\x8eý\x06', '\x01\x14\x01ä\x02%\r\x0f Jnw\x96ý\x07', '\x01\x14\x01ä\x02:\r\x0f Jnw\x96ý\x06', '\x01\x14\x01Ó\x02:\r\x0f Jnw\x96ý\x07', '\x01\x14\x01Ó\x02:\r\x0f Jnw\x96þ\x06', '\x01\x14\x01Ó\x02:\x0f\x1d Jnw\x96þ\x07', '\x01\x14\x01Ó\x02*\x0f\x1d Jnw\x96þ\x06', '\x01)\x01Ó\x02*\x0f\x1d Jnw\x96þ\x07'],
            )
        piecesquaremoves_output = (
            ['\x01\x03\x01\x00', '\x01@\x01\x00', '\x01G\x01\x00', '\x01\x82\x01\x00', '\x01\x85\x01\x00', '\x01Á\x01\x00', '\x01Æ\x01\x00', '\x02;\x01\x00', '\x02x\x01\x00', '\x02\x7f\x01\x00', '\x02º\x01\x00', '\x02½\x01\x00', '\x02ù\x01\x00', '\x02þ\x01\x00', '\x08\x01\x00', '\t\x01\x00', '\n\x01\x00', '\x0b\x01\x00', '\r\x01\x00', '\x0e\x01\x00', '\x0f\x01\x00', '\x1c\x01\x00', 'p\x01\x00', 'q\x01\x00', 'r\x01\x00', 's\x01\x00', 't\x01\x00', 'u\x01\x00', 'v\x01\x00', 'w\x01\x00', '\x84\x01\x00', 'ü\x01\x00', '\x01\x03\x01\x01', '\x01@\x01\x01', '\x01G\x01\x01', '\x01\x82\x01\x01', '\x01\x85\x01\x01', '\x01Á\x01\x01', '\x01Æ\x01\x01', '\x02;\x01\x01', '\x02x\x01\x01', '\x02\x7f\x01\x01', '\x02º\x01\x01', '\x02½\x01\x01', '\x02í\x01\x01', '\x02ù\x01\x01', '\x08\x01\x01', '\t\x01\x01', '\n\x01\x01', '\x0b\x01\x01', '\r\x01\x01', '\x0e\x01\x01', '\x0f\x01\x01', '\x1c\x01\x01', 'p\x01\x01', 'q\x01\x01', 'r\x01\x01', 's\x01\x01', 't\x01\x01', 'u\x01\x01', 'v\x01\x01', 'w\x01\x01', '\x84\x01\x01', 'ü\x01\x01', '\x01\x03\x01\x02', '\x01@\x01\x02', '\x01G\x01\x02', '\x01\x82\x01\x02', '\x01\x85\x01\x02', '\x01Á\x01\x02', '\x01Æ\x01\x02', '\x02;\x01\x02', '\x02x\x01\x02', '\x02\x7f\x01\x02', '\x02º\x01\x02', '\x02½\x01\x02', '\x02í\x01\x02', '\x02ù\x01\x02', '\x08\x01\x02', '\t\x01\x02', '\n\x01\x02', '\x0b\x01\x02', '\r\x01\x02', '\x0e\x01\x02', '\x0f\x01\x02', '$\x01\x02', 'p\x01\x02', 'q\x01\x02', 'r\x01\x02', 's\x01\x02', 't\x01\x02', 'u\x01\x02', 'v\x01\x02', 'w\x01\x02', '\x84\x01\x02', 'ü\x01\x02', '\x01\x03\x01\x03', '\x01@\x01\x03', '\x01G\x01\x03', '\x01\x82\x01\x03', '\x01\x85\x01\x03', '\x01Á\x01\x03', '\x01Æ\x01\x03', '\x02;\x01\x03', '\x02x\x01\x03', '\x02\x7f\x01\x03', '\x02º\x01\x03', '\x02½\x01\x03', '\x02ã\x01\x03', '\x02ù\x01\x03', '\x08\x01\x03', '\t\x01\x03', '\n\x01\x03', '\x0b\x01\x03', '\r\x01\x03', '\x0e\x01\x03', '\x0f\x01\x03', '$\x01\x03', 'p\x01\x03', 'q\x01\x03', 'r\x01\x03', 's\x01\x03', 't\x01\x03', 'u\x01\x03', 'v\x01\x03', 'w\x01\x03', '\x84\x01\x03', 'ü\x01\x03', '\x01\x03\x01\x04', '\x01@\x01\x04', '\x01G\x01\x04', '\x01\x82\x01\x04', '\x01\x85\x01\x04', '\x01Æ\x01\x04', '\x01Ò\x01\x04', '\x02;\x01\x04', '\x02x\x01\x04', '\x02\x7f\x01\x04', '\x02º\x01\x04', '\x02½\x01\x04', '\x02ã\x01\x04', '\x02ù\x01\x04', '\x08\x01\x04', '\t\x01\x04', '\n\x01\x04', '\x0b\x01\x04', '\r\x01\x04', '\x0e\x01\x04', '\x0f\x01\x04', '$\x01\x04', 'p\x01\x04', 'q\x01\x04', 'r\x01\x04', 's\x01\x04', 't\x01\x04', 'u\x01\x04', 'v\x01\x04', 'w\x01\x04', '\x84\x01\x04', 'ü\x01\x04', '\x01\x03\x01\x05', '\x01@\x01\x05', '\x01G\x01\x05', '\x01\x82\x01\x05', '\x01\x85\x01\x05', '\x01Æ\x01\x05', '\x02;\x01\x05', '\x02x\x01\x05', '\x02\x7f\x01\x05', '\x02º\x01\x05', '\x02½\x01\x05', '\x02Ò\x01\x05', '\x02ù\x01\x05', '\x08\x01\x05', '\t\x01\x05', '\n\x01\x05', '\x0b\x01\x05', '\r\x01\x05', '\x0e\x01\x05', '\x0f\x01\x05', '$\x01\x05', 'p\x01\x05', 'q\x01\x05', 'r\x01\x05', 's\x01\x05', 't\x01\x05', 'u\x01\x05', 'v\x01\x05', 'w\x01\x05', '\x84\x01\x05', 'ü\x01\x05', '\x01\x03\x01\x06', '\x01@\x01\x06', '\x01G\x01\x06', '\x01\x82\x01\x06', '\x01\x85\x01\x06', '\x01Æ\x01\x06', '\x02;\x01\x06', '\x02x\x01\x06', '\x02\x7f\x01\x06', '\x02º\x01\x06', '\x02½\x01\x06', '\x02ù\x01\x06', '\x08\x01\x06', '\t\x01\x06', '\n\x01\x06', '\r\x01\x06', '\x0e\x01\x06', '\x0f\x01\x06', '\x12\x01\x06', '$\x01\x06', 'p\x01\x06', 'q\x01\x06', 'r\x01\x06', 's\x01\x06', 't\x01\x06', 'u\x01\x06', 'v\x01\x06', 'w\x01\x06', '\x84\x01\x06', 'ü\x01\x06', '\x01\x03\x01\x07', '\x01@\x01\x07', '\x01G\x01\x07', '\x01\x82\x01\x07', '\x01\x85\x01\x07', '\x01Æ\x01\x07', '\x02;\x01\x07', '\x02x\x01\x07', '\x02\x7f\x01\x07', '\x02º\x01\x07', '\x02½\x01\x07', '\x02ê\x01\x07', '\x08\x01\x07', '\t\x01\x07', '\n\x01\x07', '\r\x01\x07', '\x0e\x01\x07', '\x0f\x01\x07', '\x12\x01\x07', '$\x01\x07', 'p\x01\x07', 'q\x01\x07', 'r\x01\x07', 's\x01\x07', 't\x01\x07', 'u\x01\x07', 'v\x01\x07', 'w\x01\x07', '\x84\x01\x07', 'ü\x01\x07', '\x01\x03\x01\x08', '\x01@\x01\x08', '\x01G\x01\x08', '\x01\x82\x01\x08', '\x01\x85\x01\x08', '\x01Õ\x01\x08', '\x02;\x01\x08', '\x02x\x01\x08', '\x02\x7f\x01\x08', '\x02º\x01\x08', '\x02½\x01\x08', '\x02ê\x01\x08', '\x08\x01\x08', '\t\x01\x08', '\n\x01\x08', '\r\x01\x08', '\x0e\x01\x08', '\x0f\x01\x08', '\x12\x01\x08', '$\x01\x08', 'p\x01\x08', 'q\x01\x08', 'r\x01\x08', 's\x01\x08', 't\x01\x08', 'u\x01\x08', 'v\x01\x08', 'w\x01\x08', '\x84\x01\x08', 'ü\x01\x08', '\x01\x03\x01\t', '\x01@\x01\t', '\x01G\x01\t', '\x01\x82\x01\t', '\x01\x85\x01\t', '\x01Õ\x01\t', '\x02;\x01\t', '\x02x\x01\t', '\x02\x7f\x01\t', '\x02º\x01\t', '\x02½\x01\t', '\x02ê\x01\t', '\x08\x01\t', '\t\x01\t', '\n\x01\t', '\r\x01\t', '\x0e\x01\t', '\x0f\x01\t', '\x12\x01\t', '$\x01\t', 'k\x01\t', 'p\x01\t', 'q\x01\t', 'r\x01\t', 't\x01\t', 'u\x01\t', 'v\x01\t', 'w\x01\t', '\x84\x01\t', 'ü\x01\t', '\x01\x03\x01\n', '\x01@\x01\n', '\x01G\x01\n', '\x01\x82\x01\n', '\x01¡\x01\n', '\x01Õ\x01\n', '\x02;\x01\n', '\x02x\x01\n', '\x02\x7f\x01\n', '\x02º\x01\n', '\x02½\x01\n', '\x02ê\x01\n', '\x08\x01\n', '\t\x01\n', '\n\x01\n', '\r\x01\n', '\x0e\x01\n', '\x0f\x01\n', '\x12\x01\n', '$\x01\n', 'k\x01\n', 'p\x01\n', 'q\x01\n', 'r\x01\n', 't\x01\n', 'u\x01\n', 'v\x01\n', 'w\x01\n', '\x84\x01\n', 'ü\x01\n', '\x01\x03\x01\x0b', '\x01@\x01\x0b', '\x01G\x01\x0b', '\x01\x82\x01\x0b', '\x01¡\x01\x0b', '\x01Õ\x01\x0b', '\x02;\x01\x0b', '\x02x\x01\x0b', '\x02\x7f\x01\x0b', '\x02º\x01\x0b', '\x02½\x01\x0b', '\x02ê\x01\x0b', '\x08\x01\x0b', '\t\x01\x0b', '\n\x01\x0b', '\r\x01\x0b', '\x0e\x01\x0b', '\x0f\x01\x0b', '\x12\x01\x0b', '$\x01\x0b', 'k\x01\x0b', 'l\x01\x0b', 'p\x01\x0b', 'q\x01\x0b', 'r\x01\x0b', 'u\x01\x0b', 'v\x01\x0b', 'w\x01\x0b', '\x84\x01\x0b', 'ü\x01\x0b', '\x01\x03\x01\x0c', '\x01@\x01\x0c', '\x01G\x01\x0c', '\x01\x9d\x01\x0c', '\x01¡\x01\x0c', '\x01Õ\x01\x0c', '\x02;\x01\x0c', '\x02x\x01\x0c', '\x02\x7f\x01\x0c', '\x02º\x01\x0c', '\x02½\x01\x0c', '\x02ê\x01\x0c', '\x08\x01\x0c', '\t\x01\x0c', '\n\x01\x0c', '\r\x01\x0c', '\x0e\x01\x0c', '\x0f\x01\x0c', '\x12\x01\x0c', '$\x01\x0c', 'k\x01\x0c', 'l\x01\x0c', 'p\x01\x0c', 'q\x01\x0c', 'r\x01\x0c', 'u\x01\x0c', 'v\x01\x0c', 'w\x01\x0c', '\x84\x01\x0c', 'ü\x01\x0c', '\x01\x03\x01\r', '\x01@\x01\r', '\x01G\x01\r', '\x01\x9d\x01\r', '\x01¡\x01\r', '\x01Õ\x01\r', '\x02;\x01\r', '\x02x\x01\r', '\x02\x7f\x01\r', '\x02´\x01\r', '\x02º\x01\r', '\x02ê\x01\r', '\x08\x01\r', '\t\x01\r', '\n\x01\r', '\r\x01\r', '\x0e\x01\r', '\x0f\x01\r', '\x12\x01\r', '$\x01\r', 'k\x01\r', 'l\x01\r', 'p\x01\r', 'q\x01\r', 'r\x01\r', 'u\x01\r', 'v\x01\r', 'w\x01\r', '\x84\x01\r', 'ü\x01\r', '\x01\x0c\x01\x0e', '\x01@\x01\x0e', '\x01G\x01\x0e', '\x01\x9d\x01\x0e', '\x01¡\x01\x0e', '\x01Õ\x01\x0e', '\x02;\x01\x0e', '\x02x\x01\x0e', '\x02\x7f\x01\x0e', '\x02´\x01\x0e', '\x02º\x01\x0e', '\x02ê\x01\x0e', '\x08\x01\x0e', '\t\x01\x0e', '\n\x01\x0e', '\r\x01\x0e', '\x0e\x01\x0e', '\x0f\x01\x0e', '\x12\x01\x0e', '$\x01\x0e', 'k\x01\x0e', 'l\x01\x0e', 'p\x01\x0e', 'q\x01\x0e', 'r\x01\x0e', 'u\x01\x0e', 'v\x01\x0e', 'w\x01\x0e', '\x84\x01\x0e', 'ü\x01\x0e', '\x01\x0c\x01\x0f', '\x01@\x01\x0f', '\x01G\x01\x0f', '\x01\x9d\x01\x0f', '\x01¡\x01\x0f', '\x01Õ\x01\x0f', '\x02;\x01\x0f', '\x02x\x01\x0f', '\x02\x7f\x01\x0f', '\x02´\x01\x0f', '\x02º\x01\x0f', '\x02ê\x01\x0f', '\x08\x01\x0f', '\t\x01\x0f', '\n\x01\x0f', '\r\x01\x0f', '\x0e\x01\x0f', '\x0f\x01\x0f', '\x12\x01\x0f', '$\x01\x0f', 'h\x01\x0f', 'k\x01\x0f', 'l\x01\x0f', 'q\x01\x0f', 'r\x01\x0f', 'u\x01\x0f', 'v\x01\x0f', 'w\x01\x0f', '\x84\x01\x0f', 'ü\x01\x0f', '\x01\x0c\x01\x10', '\x01@\x01\x10', '\x01G\x01\x10', '\x01\x9d\x01\x10', '\x01ª\x01\x10', '\x01Õ\x01\x10', '\x02;\x01\x10', '\x02x\x01\x10', '\x02\x7f\x01\x10', '\x02´\x01\x10', '\x02º\x01\x10', '\x08\x01\x10', '\t\x01\x10', '\n\x01\x10', '\r\x01\x10', '\x0e\x01\x10', '\x0f\x01\x10', '\x12\x01\x10', '$\x01\x10', 'h\x01\x10', 'k\x01\x10', 'l\x01\x10', 'q\x01\x10', 'r\x01\x10', 'u\x01\x10', 'v\x01\x10', 'w\x01\x10', '\x84\x01\x10', 'ü\x01\x10', '\x01\x0c\x01\x11', '\x01@\x01\x11', '\x01G\x01\x11', '\x01\x9d\x01\x11', '\x01Õ\x01\x11', '\x02;\x01\x11', '\x02x\x01\x11', '\x02\x7f\x01\x11', '\x02´\x01\x11', '\x02º\x01\x11', '\x08\x01\x11', '\t\x01\x11', '\n\x01\x11', '\r\x01\x11', '\x0e\x01\x11', '\x0f\x01\x11', '\x12\x01\x11', '$\x01\x11', 'h\x01\x11', 'j\x01\x11', 'k\x01\x11', 'l\x01\x11', 'r\x01\x11', 'u\x01\x11', 'v\x01\x11', 'w\x01\x11', '\x84\x01\x11', 'ü\x01\x11', '\x01\x0c\x01\x12', '\x01C\x01\x12', '\x01G\x01\x12', '\x01\x9d\x01\x12', '\x01Õ\x01\x12', '\x02;\x01\x12', '\x02x\x01\x12', '\x02\x7f\x01\x12', '\x02´\x01\x12', '\x02º\x01\x12', '\x08\x01\x12', '\t\x01\x12', '\n\x01\x12', '\r\x01\x12', '\x0e\x01\x12', '\x0f\x01\x12', '\x12\x01\x12', '$\x01\x12', 'h\x01\x12', 'j\x01\x12', 'k\x01\x12', 'l\x01\x12', 'r\x01\x12', 'u\x01\x12', 'v\x01\x12', 'w\x01\x12', '\x84\x01\x12', 'ü\x01\x12', '\x01\x0c\x01\x13', '\x01C\x01\x13', '\x01G\x01\x13', '\x01\x9d\x01\x13', '\x01Õ\x01\x13', '\x02;\x01\x13', '\x02x\x01\x13', '\x02\x7f\x01\x13', '\x02´\x01\x13', '\x02º\x01\x13', '\x08\x01\x13', '\t\x01\x13', '\n\x01\x13', '\r\x01\x13', '\x0e\x01\x13', '\x0f\x01\x13', '\x12\x01\x13', '$\x01\x13', 'c\x01\x13', 'h\x01\x13', 'j\x01\x13', 'l\x01\x13', 'r\x01\x13', 'u\x01\x13', 'v\x01\x13', 'w\x01\x13', '\x84\x01\x13', 'ü\x01\x13', '\x01\x0c\x01\x14', '\x01C\x01\x14', '\x01G\x01\x14', '\x01\x9d\x01\x14', '\x01Õ\x01\x14', '\x02;\x01\x14', '\x02x\x01\x14', '\x02\x7f\x01\x14', '\x02´\x01\x14', '\x02º\x01\x14', '\x08\x01\x14', '\t\x01\x14', '\n\x01\x14', '\r\x01\x14', '\x0e\x01\x14', '\x12\x01\x14', '\x1f\x01\x14', '$\x01\x14', 'c\x01\x14', 'h\x01\x14', 'j\x01\x14', 'l\x01\x14', 'r\x01\x14', 'u\x01\x14', 'v\x01\x14', 'w\x01\x14', '\x84\x01\x14', 'ü\x01\x14', '\x01\x0c\x01\x15', '\x01C\x01\x15', '\x01G\x01\x15', '\x01\x9d\x01\x15', '\x01Õ\x01\x15', '\x02;\x01\x15', '\x02x\x01\x15', '\x02\x7f\x01\x15', '\x02³\x01\x15', '\x02´\x01\x15', '\x08\x01\x15', '\t\x01\x15', '\n\x01\x15', '\r\x01\x15', '\x0e\x01\x15', '\x12\x01\x15', '\x1f\x01\x15', '$\x01\x15', 'c\x01\x15', 'h\x01\x15', 'j\x01\x15', 'l\x01\x15', 'r\x01\x15', 'u\x01\x15', 'v\x01\x15', 'w\x01\x15', '\x84\x01\x15', 'ü\x01\x15', '\x01\x0c\x01\x16', '\x01C\x01\x16', '\x01G\x01\x16', '\x01¦\x01\x16', '\x01Õ\x01\x16', '\x02;\x01\x16', '\x02x\x01\x16', '\x02\x7f\x01\x16', '\x02³\x01\x16', '\x02´\x01\x16', '\x08\x01\x16', '\t\x01\x16', '\n\x01\x16', '\r\x01\x16', '\x0e\x01\x16', '\x12\x01\x16', '\x1f\x01\x16', '$\x01\x16', 'c\x01\x16', 'h\x01\x16', 'j\x01\x16', 'l\x01\x16', 'r\x01\x16', 'u\x01\x16', 'v\x01\x16', 'w\x01\x16', '\x84\x01\x16', 'ü\x01\x16', '\x01\x0c\x01\x17', '\x01C\x01\x17', '\x01G\x01\x17', '\x01¦\x01\x17', '\x01Õ\x01\x17', '\x02;\x01\x17', '\x02x\x01\x17', '\x02}\x01\x17', '\x02³\x01\x17', '\x02´\x01\x17', '\x08\x01\x17', '\t\x01\x17', '\n\x01\x17', '\r\x01\x17', '\x0e\x01\x17', '\x12\x01\x17', '\x1f\x01\x17', '$\x01\x17', 'c\x01\x17', 'h\x01\x17', 'j\x01\x17', 'l\x01\x17', 'r\x01\x17', 'u\x01\x17', 'v\x01\x17', 'w\x01\x17', '\x84\x01\x17', 'þ\x01\x17', '\x01\x0c\x01\x18', '\x01G\x01\x18', '\x01[\x01\x18', '\x01¦\x01\x18', '\x01Õ\x01\x18', '\x02;\x01\x18', '\x02x\x01\x18', '\x02}\x01\x18', '\x02³\x01\x18', '\x02´\x01\x18', '\x08\x01\x18', '\t\x01\x18', '\n\x01\x18', '\r\x01\x18', '\x0e\x01\x18', '\x12\x01\x18', '\x1f\x01\x18', '$\x01\x18', 'c\x01\x18', 'h\x01\x18', 'j\x01\x18', 'l\x01\x18', 'r\x01\x18', 'u\x01\x18', 'v\x01\x18', 'w\x01\x18', '\x84\x01\x18', 'þ\x01\x18', '\x01\x0c\x01\x19', '\x01G\x01\x19', '\x01[\x01\x19', '\x01¦\x01\x19', '\x01Õ\x01\x19', '\x02;\x01\x19', '\x02x\x01\x19', '\x02}\x01\x19', '\x02³\x01\x19', '\x02´\x01\x19', '\x08\x01\x19', '\t\x01\x19', '\n\x01\x19', '\r\x01\x19', '\x0e\x01\x19', '\x12\x01\x19', '\x1f\x01\x19', '$\x01\x19', 'c\x01\x19', 'e\x01\x19', 'h\x01\x19', 'j\x01\x19', 'l\x01\x19', 'r\x01\x19', 'v\x01\x19', 'w\x01\x19', '\x84\x01\x19', 'þ\x01\x19', '\x01\x0c\x01\x1a', '\x01G\x01\x1a', '\x01[\x01\x1a', '\x01¦\x01\x1a', '\x01Õ\x01\x1a', '\x02;\x01\x1a', '\x02x\x01\x1a', '\x02}\x01\x1a', '\x02³\x01\x1a', '\x02´\x01\x1a', '\x08\x01\x1a', '\t\x01\x1a', '\n\x01\x1a', '\r\x01\x1a', '\x0e\x01\x1a', '\x12\x01\x1a', '\x1f\x01\x1a', '-\x01\x1a', 'c\x01\x1a', 'h\x01\x1a', 'j\x01\x1a', 'l\x01\x1a', 'r\x01\x1a', 'v\x01\x1a', 'w\x01\x1a', '\x84\x01\x1a', 'þ\x01\x1a', '\x01\x0c\x01\x1b', '\x01G\x01\x1b', '\x01[\x01\x1b', '\x01¦\x01\x1b', '\x01Õ\x01\x1b', '\x02;\x01\x1b', '\x02x\x01\x1b', '\x02}\x01\x1b', '\x02³\x01\x1b', '\x02´\x01\x1b', '\x08\x01\x1b', '\t\x01\x1b', '\n\x01\x1b', '\r\x01\x1b', '\x0e\x01\x1b', '\x12\x01\x1b', '\x1f\x01\x1b', 'c\x01\x1b', 'h\x01\x1b', 'j\x01\x1b', 'l\x01\x1b', 'm\x01\x1b', 'r\x01\x1b', 'w\x01\x1b', '\x84\x01\x1b', 'þ\x01\x1b', '\x01\x0c\x01\x1c', '\x01G\x01\x1c', '\x01[\x01\x1c', '\x01¯\x01\x1c', '\x01Õ\x01\x1c', '\x02;\x01\x1c', '\x02x\x01\x1c', '\x02}\x01\x1c', '\x02³\x01\x1c', '\x02´\x01\x1c', '\x08\x01\x1c', '\t\x01\x1c', '\n\x01\x1c', '\r\x01\x1c', '\x0e\x01\x1c', '\x12\x01\x1c', '\x1f\x01\x1c', 'c\x01\x1c', 'h\x01\x1c', 'j\x01\x1c', 'l\x01\x1c', 'm\x01\x1c', 'r\x01\x1c', 'w\x01\x1c', '\x84\x01\x1c', 'þ\x01\x1c', '\x01\x0c\x01\x1d', '\x01G\x01\x1d', '\x01[\x01\x1d', '\x01¯\x01\x1d', '\x01Õ\x01\x1d', '\x02;\x01\x1d', '\x02u\x01\x1d', '\x02x\x01\x1d', '\x02³\x01\x1d', '\x02´\x01\x1d', '\x08\x01\x1d', '\t\x01\x1d', '\n\x01\x1d', '\r\x01\x1d', '\x0e\x01\x1d', '\x12\x01\x1d', '\x1f\x01\x1d', 'c\x01\x1d', 'h\x01\x1d', 'j\x01\x1d', 'l\x01\x1d', 'm\x01\x1d', 'r\x01\x1d', 'w\x01\x1d', '\x84\x01\x1d', 'þ\x01\x1d', '\x01\x0c\x01\x1e', '\x01G\x01\x1e', '\x01^\x01\x1e', '\x01¯\x01\x1e', '\x01Õ\x01\x1e', '\x02;\x01\x1e', '\x02u\x01\x1e', '\x02x\x01\x1e', '\x02³\x01\x1e', '\x02´\x01\x1e', '\x08\x01\x1e', '\t\x01\x1e', '\n\x01\x1e', '\r\x01\x1e', '\x0e\x01\x1e', '\x12\x01\x1e', '\x1f\x01\x1e', 'c\x01\x1e', 'h\x01\x1e', 'j\x01\x1e', 'l\x01\x1e', 'm\x01\x1e', 'r\x01\x1e', 'w\x01\x1e', '\x84\x01\x1e', 'þ\x01\x1e', '\x01\x0c\x01\x1f', '\x01G\x01\x1f', '\x01^\x01\x1f', '\x01¯\x01\x1f', '\x01Õ\x01\x1f', '\x02;\x01\x1f', '\x02u\x01\x1f', '\x02x\x01\x1f', '\x02³\x01\x1f', '\x02´\x01\x1f', '\x08\x01\x1f', '\t\x01\x1f', '\n\x01\x1f', '\r\x01\x1f', '\x0e\x01\x1f', '\x12\x01\x1f', '\x1f\x01\x1f', 'c\x01\x1f', 'h\x01\x1f', 'j\x01\x1f', 'l\x01\x1f', 'm\x01\x1f', 'r\x01\x1f', 'w\x01\x1f', '\x84\x01\x1f', 'ÿ\x01\x1f', '\x01\x0c\x01 ', '\x01G\x01 ', '\x01]\x01 ', '\x01¯\x01 ', '\x01Õ\x01 ', '\x02;\x01 ', '\x02u\x01 ', '\x02x\x01 ', '\x02³\x01 ', '\x02´\x01 ', '\x08\x01 ', '\t\x01 ', '\n\x01 ', '\r\x01 ', '\x0e\x01 ', '\x12\x01 ', '\x1f\x01 ', 'c\x01 ', 'h\x01 ', 'j\x01 ', 'l\x01 ', 'm\x01 ', 'r\x01 ', 'w\x01 ', '\x84\x01 ', 'ÿ\x01 ', '\x01\x0c\x01!', '\x01G\x01!', '\x01]\x01!', '\x01¯\x01!', '\x01Õ\x01!', '\x02;\x01!', '\x02u\x01!', '\x02x\x01!', '\x02´\x01!', '\x02¼\x01!', '\x08\x01!', '\t\x01!', '\n\x01!', '\r\x01!', '\x0e\x01!', '\x12\x01!', '\x1f\x01!', 'c\x01!', 'h\x01!', 'j\x01!', 'l\x01!', 'm\x01!', 'r\x01!', 'w\x01!', '\x84\x01!', 'ÿ\x01!', '\x01,\x01"', '\x01G\x01"', '\x01]\x01"', '\x01¯\x01"', '\x01Õ\x01"', '\x02;\x01"', '\x02u\x01"', '\x02x\x01"', '\x02´\x01"', '\x02¼\x01"', '\x08\x01"', '\t\x01"', '\n\x01"', '\r\x01"', '\x0e\x01"', '\x12\x01"', '\x1f\x01"', 'c\x01"', 'h\x01"', 'j\x01"', 'm\x01"', 'r\x01"', 'w\x01"', '\x84\x01"', 'ÿ\x01"', '\x01,\x01#', '\x01G\x01#', '\x01]\x01#', '\x01¯\x01#', '\x01Õ\x01#', '\x02;\x01#', '\x02u\x01#', '\x02x\x01#', '\x02«\x01#', '\x02¼\x01#', '\x08\x01#', '\t\x01#', '\n\x01#', '\r\x01#', '\x0e\x01#', '\x12\x01#', '\x1f\x01#', 'c\x01#', 'h\x01#', 'j\x01#', 'm\x01#', 'r\x01#', 'w\x01#', '\x84\x01#', 'ÿ\x01#', '\x01,\x01$', '\x01G\x01$', '\x01^\x01$', '\x01¯\x01$', '\x01Õ\x01$', '\x02;\x01$', '\x02u\x01$', '\x02x\x01$', '\x02«\x01$', '\x02¼\x01$', '\x08\x01$', '\t\x01$', '\n\x01$', '\r\x01$', '\x0e\x01$', '\x12\x01$', '\x1f\x01$', 'c\x01$', 'h\x01$', 'j\x01$', 'm\x01$', 'r\x01$', 'w\x01$', '\x84\x01$', 'ÿ\x01$', '\x01,\x01%', '\x01G\x01%', '\x01^\x01%', '\x01¯\x01%', '\x01Õ\x01%', '\x024\x01%', '\x02u\x01%', '\x02x\x01%', '\x02«\x01%', '\x02¼\x01%', '\x08\x01%', '\t\x01%', '\n\x01%', '\r\x01%', '\x0e\x01%', '\x12\x01%', '\x1f\x01%', 'c\x01%', 'h\x01%', 'j\x01%', 'm\x01%', 'r\x01%', 'w\x01%', '\x84\x01%', 'ÿ\x01%', '\x014\x01&', '\x01G\x01&', '\x01^\x01&', '\x01¯\x01&', '\x01Õ\x01&', '\x02u\x01&', '\x02x\x01&', '\x02«\x01&', '\x02¼\x01&', '\x08\x01&', '\t\x01&', '\n\x01&', '\r\x01&', '\x0e\x01&', '\x12\x01&', '\x1f\x01&', 'c\x01&', 'h\x01&', 'j\x01&', 'm\x01&', 'r\x01&', 'w\x01&', '\x84\x01&', 'ÿ\x01&', "\x01G\x01'", "\x01^\x01'", "\x01¯\x01'", "\x01Õ\x01'", "\x02t\x01'", "\x02x\x01'", "\x02«\x01'", "\x02¼\x01'", "\x08\x01'", "\t\x01'", "\n\x01'", "\r\x01'", "\x0e\x01'", "\x12\x01'", "\x1f\x01'", "c\x01'", "h\x01'", "j\x01'", "m\x01'", "r\x01'", "w\x01'", "\x84\x01'", "ÿ\x01'", '\x01G\x01(', '\x01^\x01(', '\x01¯\x01(', '\x01Õ\x01(', '\x02t\x01(', '\x02x\x01(', '\x02«\x01(', '\x02¼\x01(', '\x08\x01(', '\t\x01(', '\n\x01(', '\r\x01(', '\x0e\x01(', '\x12\x01(', '\x1f\x01(', 'c\x01(', 'h\x01(', 'j\x01(', 'm\x01(', 'r\x01(', 'w\x01(', '\x8b\x01(', 'ÿ\x01(', '\x01G\x01)', '\x01^\x01)', '\x01¯\x01)', '\x01Õ\x01)', '\x02t\x01)', '\x02x\x01)', '\x02«\x01)', '\x02³\x01)', '\x08\x01)', '\t\x01)', '\n\x01)', '\r\x01)', '\x0e\x01)', '\x12\x01)', '\x1f\x01)', 'c\x01)', 'h\x01)', 'j\x01)', 'm\x01)', 'r\x01)', 'w\x01)', '\x8b\x01)', 'ÿ\x01)', '\x01G\x01*', '\x01X\x01*', '\x01¯\x01*', '\x01Õ\x01*', '\x02t\x01*', '\x02x\x01*', '\x02«\x01*', '\x02³\x01*', '\x08\x01*', '\t\x01*', '\n\x01*', '\r\x01*', '\x0e\x01*', '\x12\x01*', '\x1f\x01*', 'c\x01*', 'h\x01*', 'j\x01*', 'm\x01*', 'r\x01*', 'w\x01*', '\x8b\x01*', 'ÿ\x01*', '\x01G\x01+', '\x01X\x01+', '\x01¯\x01+', '\x01Õ\x01+', '\x02t\x01+', '\x02x\x01+', '\x02«\x01+', '\x02³\x01+', '\x08\x01+', '\t\x01+', '\n\x01+', '\r\x01+', '\x0e\x01+', '\x12\x01+', '\x1f\x01+', 'b\x01+', 'c\x01+', 'h\x01+', 'm\x01+', 'r\x01+', 'w\x01+', '\x8b\x01+', 'ÿ\x01+', '\x01G\x01,', '\x01`\x01,', '\x01¯\x01,', '\x01Õ\x01,', '\x02t\x01,', '\x02x\x01,', '\x02«\x01,', '\x02³\x01,', '\x08\x01,', '\t\x01,', '\n\x01,', '\r\x01,', '\x0e\x01,', '\x12\x01,', '\x1f\x01,', 'b\x01,', 'c\x01,', 'h\x01,', 'm\x01,', 'r\x01,', 'w\x01,', '\x8b\x01,', 'ÿ\x01,', '\x01G\x01-', '\x01`\x01-', '\x01¯\x01-', '\x01Õ\x01-', '\x02t\x01-', '\x02x\x01-', '\x02¡\x01-', '\x02«\x01-', '\x08\x01-', '\t\x01-', '\n\x01-', '\r\x01-', '\x0e\x01-', '\x12\x01-', '\x1f\x01-', 'b\x01-', 'c\x01-', 'h\x01-', 'm\x01-', 'r\x01-', 'w\x01-', '\x8b\x01-', 'ÿ\x01-', '\x01G\x01.', '\x01`\x01.', '\x01¯\x01.', '\x01Õ\x01.', '\x02t\x01.', '\x02x\x01.', '\x02¡\x01.', '\x02«\x01.', '\t\x01.', '\n\x01.', '\r\x01.', '\x0e\x01.', '\x12\x01.', '\x18\x01.', '\x1f\x01.', 'b\x01.', 'c\x01.', 'h\x01.', 'm\x01.', 'r\x01.', 'w\x01.', '\x8b\x01.', 'ÿ\x01.', '\x01G\x01/', '\x01`\x01/', '\x01¯\x01/', '\x01Õ\x01/', '\x02t\x01/', '\x02x\x01/', '\x02«\x01/', '\x02³\x01/', '\t\x01/', '\n\x01/', '\r\x01/', '\x0e\x01/', '\x12\x01/', '\x18\x01/', '\x1f\x01/', 'b\x01/', 'c\x01/', 'h\x01/', 'm\x01/', 'r\x01/', 'w\x01/', '\x8b\x01/', 'ÿ\x01/', '\x01D\x010', '\x01`\x010', '\x01¯\x010', '\x01Õ\x010', '\x02t\x010', '\x02x\x010', '\x02«\x010', '\x02³\x010', '\t\x010', '\n\x010', '\r\x010', '\x0e\x010', '\x12\x010', '\x18\x010', '\x1f\x010', 'b\x010', 'c\x010', 'h\x010', 'm\x010', 'r\x010', 'w\x010', '\x8b\x010', 'ÿ\x010', '\x01`\x011', '\x01¯\x011', '\x01Õ\x011', '\x02D\x011', '\x02x\x011', '\x02«\x011', '\x02³\x011', '\t\x011', '\n\x011', '\r\x011', '\x0e\x011', '\x12\x011', '\x18\x011', '\x1f\x011', 'b\x011', 'c\x011', 'h\x011', 'm\x011', 'r\x011', 'w\x011', '\x8b\x011', 'ÿ\x011', '\x01`\x012', '\x01¯\x012', '\x01Ä\x012', '\x02x\x012', '\x02«\x012', '\x02³\x012', '\t\x012', '\n\x012', '\r\x012', '\x0e\x012', '\x12\x012', '\x18\x012', '\x1f\x012', 'b\x012', 'c\x012', 'h\x012', 'm\x012', 'r\x012', 'w\x012', '\x8b\x012', 'ÿ\x012', '\x01`\x013', '\x01¯\x013', '\x01Ä\x013', '\x02x\x013', '\x02«\x013', '\x02³\x013', '\t\x013', '\n\x013', '\r\x013', '\x0e\x013', '\x12\x013', '\x18\x013', '\x1f\x013', 'b\x013', 'c\x013', 'h\x013', 'j\x013', 'm\x013', 'w\x013', '\x8b\x013', 'ÿ\x013', '\x01`\x014', '\x01¯\x014', '\x01Ó\x014', '\x02x\x014', '\x02«\x014', '\x02³\x014', '\t\x014', '\n\x014', '\r\x014', '\x0e\x014', '\x12\x014', '\x18\x014', '\x1f\x014', 'b\x014', 'c\x014', 'h\x014', 'j\x014', 'm\x014', 'w\x014', '\x8b\x014', 'ÿ\x014', '\x01`\x015', '\x01¯\x015', '\x01Ó\x015', '\x02x\x015', '\x02²\x015', '\x02³\x015', '\t\x015', '\n\x015', '\r\x015', '\x0e\x015', '\x12\x015', '\x18\x015', '\x1f\x015', 'b\x015', 'c\x015', 'h\x015', 'j\x015', 'm\x015', 'w\x015', '\x8b\x015', 'ÿ\x015', '\x01b\x016', '\x01¯\x016', '\x01Ó\x016', '\x02x\x016', '\x02²\x016', '\x02³\x016', '\t\x016', '\n\x016', '\r\x016', '\x0e\x016', '\x12\x016', '\x18\x016', '\x1f\x016', 'c\x016', 'h\x016', 'j\x016', 'm\x016', 'w\x016', '\x8b\x016', 'ÿ\x016', '\x01b\x017', '\x01¯\x017', '\x01Ó\x017', '\x02x\x017', '\x02©\x017', '\x02³\x017', '\t\x017', '\n\x017', '\r\x017', '\x0e\x017', '\x12\x017', '\x18\x017', '\x1f\x017', 'c\x017', 'h\x017', 'j\x017', 'm\x017', 'w\x017', '\x8b\x017', 'ÿ\x017', '\x01b\x018', '\x01\x94\x018', '\x01Ó\x018', '\x02x\x018', '\x02©\x018', '\x02³\x018', '\t\x018', '\n\x018', '\r\x018', '\x0e\x018', '\x12\x018', '\x18\x018', '\x1f\x018', 'c\x018', 'h\x018', 'j\x018', 'm\x018', 'w\x018', '\x8b\x018', 'ÿ\x018', '\x01\x94\x019', '\x01Ó\x019', '\x02x\x019', '\x02¢\x019', '\x02³\x019', '\t\x019', '\n\x019', '\r\x019', '\x0e\x019', '\x12\x019', '\x18\x019', '\x1f\x019', 'c\x019', 'h\x019', 'j\x019', 'm\x019', 'w\x019', '\x8b\x019', 'ÿ\x019', '\x01\x94\x01:', '\x01â\x01:', '\x02x\x01:', '\x02³\x01:', '\t\x01:', '\n\x01:', '\r\x01:', '\x0e\x01:', '\x12\x01:', '\x18\x01:', '\x1f\x01:', 'c\x01:', 'h\x01:', 'j\x01:', 'm\x01:', 'w\x01:', '\x8b\x01:', 'ÿ\x01:', '\x01\x94\x01;', '\x01â\x01;', '\x02x\x01;', '\x02º\x01;', '\t\x01;', '\n\x01;', '\r\x01;', '\x0e\x01;', '\x12\x01;', '\x18\x01;', '\x1f\x01;', 'c\x01;', 'h\x01;', 'j\x01;', 'm\x01;', 'w\x01;', '\x8b\x01;', 'ÿ\x01;', '\x01\x94\x01<', '\x01â\x01<', '\x02x\x01<', '\x02º\x01<', '\t\x01<', '\n\x01<', '\r\x01<', '\x0e\x01<', '\x12\x01<', '\x1f\x01<', ' \x01<', 'c\x01<', 'h\x01<', 'j\x01<', 'm\x01<', 'w\x01<', '\x8b\x01<', 'ÿ\x01<', '\x01\x94\x01=', '\x01â\x01=', '\x02x\x01=', '\x02º\x01=', '\t\x01=', '\n\x01=', '\r\x01=', '\x0e\x01=', '\x12\x01=', '\x1f\x01=', ' \x01=', 'c\x01=', 'h\x01=', 'j\x01=', 'm\x01=', 'w\x01=', '\x8b\x01=', 'ö\x01=', '\x01\x94\x01>', '\x01â\x01>', '\x02x\x01>', '\x02º\x01>', '\t\x01>', '\n\x01>', '\r\x01>', '\x12\x01>', '\x16\x01>', '\x1f\x01>', ' \x01>', 'c\x01>', 'h\x01>', 'j\x01>', 'm\x01>', 'w\x01>', '\x8b\x01>', 'ö\x01>', '\x01\x94\x01?', '\x01â\x01?', '\x02x\x01?', '\x02º\x01?', '\t\x01?', '\n\x01?', '\r\x01?', '\x12\x01?', '\x16\x01?', '\x1f\x01?', ' \x01?', 'c\x01?', 'h\x01?', 'j\x01?', 'm\x01?', 'w\x01?', '\x8b\x01?', 'õ\x01?', '\x01\x9d\x01@', '\x01â\x01@', '\x02x\x01@', '\x02º\x01@', '\t\x01@', '\n\x01@', '\r\x01@', '\x12\x01@', '\x16\x01@', '\x1f\x01@', ' \x01@', 'c\x01@', 'h\x01@', 'j\x01@', 'm\x01@', 'w\x01@', '\x8b\x01@', 'õ\x01@', '\x01\x9d\x01A', '\x01â\x01A', '\x02x\x01A', '\x02\x9e\x01A', '\t\x01A', '\n\x01A', '\r\x01A', '\x12\x01A', '\x16\x01A', '\x1f\x01A', ' \x01A', 'c\x01A', 'h\x01A', 'j\x01A', 'm\x01A', 'w\x01A', '\x8b\x01A', 'õ\x01A', '\x01\x9d\x01B', '\x01â\x01B', '\x02x\x01B', '\x02\x9e\x01B', '\n\x01B', '\r\x01B', '\x12\x01B', '\x16\x01B', '\x19\x01B', '\x1f\x01B', ' \x01B', 'c\x01B', 'h\x01B', 'j\x01B', 'm\x01B', 'w\x01B', '\x8b\x01B', 'õ\x01B'],
            ['\x01\x03\x01\x00', '\x01@\x01\x00', '\x01G\x01\x00', '\x01\x82\x01\x00', '\x01\x85\x01\x00', '\x01Á\x01\x00', '\x01Æ\x01\x00', '\x02;\x01\x00', '\x02x\x01\x00', '\x02\x7f\x01\x00', '\x02º\x01\x00', '\x02½\x01\x00', '\x02ù\x01\x00', '\x02þ\x01\x00', '\x08\x01\x00', '\t\x01\x00', '\n\x01\x00', '\x0b\x01\x00', '\r\x01\x00', '\x0e\x01\x00', '\x0f\x01\x00', '\x1c\x01\x00', 'p\x01\x00', 'q\x01\x00', 'r\x01\x00', 's\x01\x00', 't\x01\x00', 'u\x01\x00', 'v\x01\x00', 'w\x01\x00', '\x84\x01\x00', 'ü\x01\x00', '\x01\x03\x01\x01', '\x01@\x01\x01', '\x01G\x01\x01', '\x01\x82\x01\x01', '\x01\x85\x01\x01', '\x01Á\x01\x01', '\x01Æ\x01\x01', '\x02;\x01\x01', '\x02x\x01\x01', '\x02\x7f\x01\x01', '\x02º\x01\x01', '\x02½\x01\x01', '\x02ù\x01\x01', '\x02þ\x01\x01', '\x08\x01\x01', '\t\x01\x01', '\n\x01\x01', '\x0b\x01\x01', '\r\x01\x01', '\x0e\x01\x01', '\x0f\x01\x01', '\x1c\x01\x01', 'j\x01\x01', 'p\x01\x01', 'q\x01\x01', 's\x01\x01', 't\x01\x01', 'u\x01\x01', 'v\x01\x01', 'w\x01\x01', '\x84\x01\x01', 'ü\x01\x01', '\x01\x03\x01\x02', '\x01@\x01\x02', '\x01G\x01\x02', '\x01\x82\x01\x02', '\x01\x85\x01\x02', '\x01Á\x01\x02', '\x01Æ\x01\x02', '\x02;\x01\x02', '\x02x\x01\x02', '\x02\x7f\x01\x02', '\x02º\x01\x02', '\x02½\x01\x02', '\x02ù\x01\x02', '\x02þ\x01\x02', '\x08\x01\x02', '\t\x01\x02', '\n\x01\x02', '\r\x01\x02', '\x0e\x01\x02', '\x0f\x01\x02', '\x1b\x01\x02', '\x1c\x01\x02', 'j\x01\x02', 'p\x01\x02', 'q\x01\x02', 's\x01\x02', 't\x01\x02', 'u\x01\x02', 'v\x01\x02', 'w\x01\x02', '\x84\x01\x02', 'ü\x01\x02', '\x01\x03\x01\x03', '\x01@\x01\x03', '\x01G\x01\x03', '\x01\x82\x01\x03', '\x01\x85\x01\x03', '\x01Á\x01\x03', '\x01Æ\x01\x03', '\x02;\x01\x03', '\x02x\x01\x03', '\x02\x7f\x01\x03', '\x02º\x01\x03', '\x02½\x01\x03', '\x02ù\x01\x03', '\x02þ\x01\x03', '\x08\x01\x03', '\t\x01\x03', '\n\x01\x03', '\r\x01\x03', '\x0e\x01\x03', '\x0f\x01\x03', '\x1b\x01\x03', '\x1c\x01\x03', 'c\x01\x03', 'j\x01\x03', 'p\x01\x03', 'q\x01\x03', 't\x01\x03', 'u\x01\x03', 'v\x01\x03', 'w\x01\x03', '\x84\x01\x03', 'ü\x01\x03', '\x01\x03\x01\x04', '\x01@\x01\x04', '\x01G\x01\x04', '\x01\x82\x01\x04', '\x01\x85\x01\x04', '\x01Á\x01\x04', '\x01Æ\x01\x04', '\x02;\x01\x04', '\x02x\x01\x04', '\x02\x7f\x01\x04', '\x02º\x01\x04', '\x02½\x01\x04', '\x02ù\x01\x04', '\x02þ\x01\x04', '\x08\x01\x04', '\t\x01\x04', '\n\x01\x04', '\r\x01\x04', '\x0e\x01\x04', '\x0f\x01\x04', '\x1b\x01\x04', '#\x01\x04', 'j\x01\x04', 'p\x01\x04', 'q\x01\x04', 't\x01\x04', 'u\x01\x04', 'v\x01\x04', 'w\x01\x04', '\x84\x01\x04', 'ü\x01\x04', '\x01\x03\x01\x05', '\x01@\x01\x05', '\x01G\x01\x05', '\x01\x82\x01\x05', '\x01\x85\x01\x05', '\x01Á\x01\x05', '\x01Æ\x01\x05', '\x02;\x01\x05', '\x02x\x01\x05', '\x02\x7f\x01\x05', '\x02º\x01\x05', '\x02½\x01\x05', '\x02ù\x01\x05', '\x02þ\x01\x05', '\x08\x01\x05', '\t\x01\x05', '\n\x01\x05', '\r\x01\x05', '\x0e\x01\x05', '\x0f\x01\x05', '\x1b\x01\x05', 'c\x01\x05', 'p\x01\x05', 'q\x01\x05', 't\x01\x05', 'u\x01\x05', 'v\x01\x05', 'w\x01\x05', '\x84\x01\x05', 'ü\x01\x05', '\x01\x03\x01\x06', '\x01@\x01\x06', '\x01G\x01\x06', '\x01\x82\x01\x06', '\x01\x85\x01\x06', '\x01Á\x01\x06', '\x01Æ\x01\x06', '\x02;\x01\x06', '\x02x\x01\x06', '\x02\x7f\x01\x06', '\x02º\x01\x06', '\x02½\x01\x06', '\x02ù\x01\x06', '\x02þ\x01\x06', '\x08\x01\x06', '\t\x01\x06', '\r\x01\x06', '\x0e\x01\x06', '\x0f\x01\x06', '\x1a\x01\x06', '\x1b\x01\x06', 'c\x01\x06', 'p\x01\x06', 'q\x01\x06', 't\x01\x06', 'u\x01\x06', 'v\x01\x06', 'w\x01\x06', '\x84\x01\x06', 'ü\x01\x06', '\x01\x03\x01\x07', '\x01@\x01\x07', '\x01G\x01\x07', '\x01\x82\x01\x07', '\x01\x85\x01\x07', '\x01Á\x01\x07', '\x01Æ\x01\x07', '\x02;\x01\x07', '\x02x\x01\x07', '\x02\x7f\x01\x07', '\x02º\x01\x07', '\x02½\x01\x07', '\x02í\x01\x07', '\x02ù\x01\x07', '\x08\x01\x07', '\t\x01\x07', '\r\x01\x07', '\x0e\x01\x07', '\x0f\x01\x07', '\x1a\x01\x07', '\x1b\x01\x07', 'c\x01\x07', 'p\x01\x07', 'q\x01\x07', 't\x01\x07', 'u\x01\x07', 'v\x01\x07', 'w\x01\x07', '\x84\x01\x07', 'ü\x01\x07', '\x01\x03\x01\x08', '\x01@\x01\x08', '\x01G\x01\x08', '\x01\x82\x01\x08', '\x01\x85\x01\x08', '\x01Á\x01\x08', '\x01Æ\x01\x08', '\x02;\x01\x08', '\x02x\x01\x08', '\x02\x7f\x01\x08', '\x02º\x01\x08', '\x02½\x01\x08', '\x02í\x01\x08', '\x02ù\x01\x08', '\x08\x01\x08', '\t\x01\x08', '\r\x01\x08', '\x0e\x01\x08', '\x0f\x01\x08', '\x1b\x01\x08', '"\x01\x08', 'c\x01\x08', 'p\x01\x08', 'q\x01\x08', 't\x01\x08', 'u\x01\x08', 'v\x01\x08', 'w\x01\x08', '\x84\x01\x08', 'ü\x01\x08', '\x01\x03\x01\t', '\x01@\x01\t', '\x01G\x01\t', '\x01\x82\x01\t', '\x01\x85\x01\t', '\x01Á\x01\t', '\x01Æ\x01\t', '\x02;\x01\t', '\x02x\x01\t', '\x02\x7f\x01\t', '\x02º\x01\t', '\x02½\x01\t', '\x02í\x01\t', '\x02ù\x01\t', '\x08\x01\t', '\t\x01\t', '\r\x01\t', '\x0e\x01\t', '\x0f\x01\t', '\x1b\x01\t', '"\x01\t', 'c\x01\t', 'l\x01\t', 'p\x01\t', 'q\x01\t', 'u\x01\t', 'v\x01\t', 'w\x01\t', '\x84\x01\t', 'ü\x01\t', '\x01\x03\x01\n', '\x01@\x01\n', '\x01G\x01\n', '\x01\x82\x01\n', '\x01\x85\x01\n', '\x01Æ\x01\n', '\x01Ò\x01\n', '\x02;\x01\n', '\x02x\x01\n', '\x02\x7f\x01\n', '\x02º\x01\n', '\x02½\x01\n', '\x02í\x01\n', '\x02ù\x01\n', '\x08\x01\n', '\t\x01\n', '\r\x01\n', '\x0e\x01\n', '\x0f\x01\n', '\x1b\x01\n', '"\x01\n', 'c\x01\n', 'l\x01\n', 'p\x01\n', 'q\x01\n', 'u\x01\n', 'v\x01\n', 'w\x01\n', '\x84\x01\n', 'ü\x01\n', '\x01\x03\x01\x0b', '\x01@\x01\x0b', '\x01G\x01\x0b', '\x01\x82\x01\x0b', '\x01\x85\x01\x0b', '\x01Æ\x01\x0b', '\x01Ò\x01\x0b', '\x02;\x01\x0b', '\x02x\x01\x0b', '\x02\x7f\x01\x0b', '\x02º\x01\x0b', '\x02½\x01\x0b', '\x02í\x01\x0b', '\x02ù\x01\x0b', '\x08\x01\x0b', '\t\x01\x0b', '\r\x01\x0b', '\x0e\x01\x0b', '\x0f\x01\x0b', '\x1b\x01\x0b', '"\x01\x0b', 'c\x01\x0b', 'i\x01\x0b', 'l\x01\x0b', 'p\x01\x0b', 'u\x01\x0b', 'v\x01\x0b', 'w\x01\x0b', '\x84\x01\x0b', 'ü\x01\x0b', '\x01\x03\x01\x0c', '\x01@\x01\x0c', '\x01G\x01\x0c', '\x01\x82\x01\x0c', '\x01\x85\x01\x0c', '\x01Æ\x01\x0c', '\x01Ò\x01\x0c', '\x02;\x01\x0c', '\x02x\x01\x0c', '\x02\x7f\x01\x0c', '\x02º\x01\x0c', '\x02½\x01\x0c', '\x02í\x01\x0c', '\x02ù\x01\x0c', '\x08\x01\x0c', '\r\x01\x0c', '\x0e\x01\x0c', '\x0f\x01\x0c', '\x19\x01\x0c', '\x1b\x01\x0c', '"\x01\x0c', 'c\x01\x0c', 'i\x01\x0c', 'l\x01\x0c', 'p\x01\x0c', 'u\x01\x0c', 'v\x01\x0c', 'w\x01\x0c', '\x84\x01\x0c', 'ü\x01\x0c', '\x01\x03\x01\r', '\x01@\x01\r', '\x01G\x01\r', '\x01\x82\x01\r', '\x01\x85\x01\r', '\x01Æ\x01\r', '\x01Ò\x01\r', '\x02;\x01\r', '\x02x\x01\r', '\x02\x7f\x01\r', '\x02º\x01\r', '\x02½\x01\r', '\x02í\x01\r', '\x02ù\x01\r', '\x08\x01\r', '\r\x01\r', '\x0e\x01\r', '\x0f\x01\r', '\x19\x01\r', '\x1b\x01\r', '"\x01\r', '`\x01\r', 'c\x01\r', 'i\x01\r', 'l\x01\r', 'u\x01\r', 'v\x01\r', 'w\x01\r', '\x84\x01\r', 'ü\x01\r', '\x01\x03\x01\x0e', '\x01@\x01\x0e', '\x01G\x01\x0e', '\x01\x85\x01\x0e', '\x01\x9d\x01\x0e', '\x01Æ\x01\x0e', '\x01Ò\x01\x0e', '\x02;\x01\x0e', '\x02x\x01\x0e', '\x02\x7f\x01\x0e', '\x02º\x01\x0e', '\x02½\x01\x0e', '\x02í\x01\x0e', '\x02ù\x01\x0e', '\x08\x01\x0e', '\r\x01\x0e', '\x0e\x01\x0e', '\x0f\x01\x0e', '\x19\x01\x0e', '\x1b\x01\x0e', '"\x01\x0e', '`\x01\x0e', 'c\x01\x0e', 'i\x01\x0e', 'l\x01\x0e', 'u\x01\x0e', 'v\x01\x0e', 'w\x01\x0e', '\x84\x01\x0e', 'ü\x01\x0e', '\x01\x03\x01\x0f', '\x01@\x01\x0f', '\x01G\x01\x0f', '\x01\x85\x01\x0f', '\x01\x9d\x01\x0f', '\x01Æ\x01\x0f', '\x01Ò\x01\x0f', '\x02;\x01\x0f', '\x02x\x01\x0f', '\x02\x7f\x01\x0f', '\x02º\x01\x0f', '\x02½\x01\x0f', '\x02í\x01\x0f', '\x02ù\x01\x0f', '\x08\x01\x0f', '\r\x01\x0f', '\x0e\x01\x0f', '\x0f\x01\x0f', '\x1b\x01\x0f', '"\x01\x0f', 'Y\x01\x0f', 'c\x01\x0f', 'i\x01\x0f', 'l\x01\x0f', 'u\x01\x0f', 'v\x01\x0f', 'w\x01\x0f', '\x84\x01\x0f', 'ü\x01\x0f', '\x01\x03\x01\x10', '\x01@\x01\x10', '\x01G\x01\x10', '\x01\x85\x01\x10', '\x01\x9d\x01\x10', '\x01Æ\x01\x10', '\x01á\x01\x10', '\x02;\x01\x10', '\x02x\x01\x10', '\x02\x7f\x01\x10', '\x02º\x01\x10', '\x02½\x01\x10', '\x02í\x01\x10', '\x02ù\x01\x10', '\x08\x01\x10', '\r\x01\x10', '\x0e\x01\x10', '\x0f\x01\x10', '\x1b\x01\x10', '"\x01\x10', 'Y\x01\x10', 'c\x01\x10', 'i\x01\x10', 'l\x01\x10', 'u\x01\x10', 'v\x01\x10', 'w\x01\x10', '\x84\x01\x10', 'ü\x01\x10', '\x01\x03\x01\x11', '\x01@\x01\x11', '\x01G\x01\x11', '\x01\x85\x01\x11', '\x01\x9d\x01\x11', '\x01Æ\x01\x11', '\x01á\x01\x11', '\x02;\x01\x11', '\x02x\x01\x11', '\x02\x7f\x01\x11', '\x02º\x01\x11', '\x02½\x01\x11', '\x02è\x01\x11', '\x02í\x01\x11', '\x08\x01\x11', '\r\x01\x11', '\x0e\x01\x11', '\x0f\x01\x11', '\x1b\x01\x11', '"\x01\x11', 'Y\x01\x11', 'c\x01\x11', 'i\x01\x11', 'l\x01\x11', 'u\x01\x11', 'v\x01\x11', 'w\x01\x11', '\x84\x01\x11', 'ü\x01\x11', '\x01\x18\x01\x12', '\x01@\x01\x12', '\x01G\x01\x12', '\x01\x85\x01\x12', '\x01\x9d\x01\x12', '\x01Æ\x01\x12', '\x01á\x01\x12', '\x02;\x01\x12', '\x02x\x01\x12', '\x02\x7f\x01\x12', '\x02º\x01\x12', '\x02½\x01\x12', '\x02è\x01\x12', '\x02í\x01\x12', '\x08\x01\x12', '\r\x01\x12', '\x0e\x01\x12', '\x0f\x01\x12', '\x1b\x01\x12', '"\x01\x12', 'Y\x01\x12', 'c\x01\x12', 'i\x01\x12', 'l\x01\x12', 'u\x01\x12', 'v\x01\x12', 'w\x01\x12', '\x84\x01\x12', 'ü\x01\x12', '\x01\x18\x01\x13', '\x01@\x01\x13', '\x01G\x01\x13', '\x01\x85\x01\x13', '\x01\x9d\x01\x13', '\x01Æ\x01\x13', '\x01á\x01\x13', '\x02;\x01\x13', '\x02x\x01\x13', '\x02\x7f\x01\x13', '\x02³\x01\x13', '\x02½\x01\x13', '\x02è\x01\x13', '\x02í\x01\x13', '\x08\x01\x13', '\r\x01\x13', '\x0e\x01\x13', '\x0f\x01\x13', '\x1b\x01\x13', '"\x01\x13', 'Y\x01\x13', 'c\x01\x13', 'i\x01\x13', 'l\x01\x13', 'u\x01\x13', 'v\x01\x13', 'w\x01\x13', '\x84\x01\x13', 'ü\x01\x13', '\x01\x18\x01\x14', '\x01@\x01\x14', '\x01G\x01\x14', '\x01\x85\x01\x14', '\x01²\x01\x14', '\x01Æ\x01\x14', '\x01á\x01\x14', '\x02;\x01\x14', '\x02x\x01\x14', '\x02\x7f\x01\x14', '\x02³\x01\x14', '\x02½\x01\x14', '\x02è\x01\x14', '\x02í\x01\x14', '\x08\x01\x14', '\r\x01\x14', '\x0e\x01\x14', '\x0f\x01\x14', '\x1b\x01\x14', '"\x01\x14', 'Y\x01\x14', 'c\x01\x14', 'i\x01\x14', 'l\x01\x14', 'u\x01\x14', 'v\x01\x14', 'w\x01\x14', '\x84\x01\x14', 'ü\x01\x14', '\x01\x18\x01\x15', '\x01@\x01\x15', '\x01G\x01\x15', '\x01\x85\x01\x15', '\x01²\x01\x15', '\x01Æ\x01\x15', '\x01á\x01\x15', '\x02;\x01\x15', '\x02x\x01\x15', '\x02\x7f\x01\x15', '\x02³\x01\x15', '\x02½\x01\x15', '\x02â\x01\x15', '\x02í\x01\x15', '\x08\x01\x15', '\r\x01\x15', '\x0e\x01\x15', '\x0f\x01\x15', '\x1b\x01\x15', 'Y\x01\x15', 'c\x01\x15', 'i\x01\x15', 'l\x01\x15', 'u\x01\x15', 'v\x01\x15', 'w\x01\x15', '\x84\x01\x15', 'ü\x01\x15', '\x01\x03\x01\x16', '\x01@\x01\x16', '\x01G\x01\x16', '\x01\x85\x01\x16', '\x01²\x01\x16', '\x01Æ\x01\x16', '\x01á\x01\x16', '\x02;\x01\x16', '\x02x\x01\x16', '\x02\x7f\x01\x16', '\x02³\x01\x16', '\x02½\x01\x16', '\x02â\x01\x16', '\x02í\x01\x16', '\x08\x01\x16', '\r\x01\x16', '\x0e\x01\x16', '\x0f\x01\x16', '\x1b\x01\x16', 'Y\x01\x16', 'c\x01\x16', 'i\x01\x16', 'l\x01\x16', 'u\x01\x16', 'v\x01\x16', 'w\x01\x16', '\x84\x01\x16', 'ü\x01\x16', '\x01\x03\x01\x17', '\x01@\x01\x17', '\x01G\x01\x17', '\x01\x85\x01\x17', '\x01²\x01\x17', '\x01Æ\x01\x17', '\x01á\x01\x17', '\x02:\x01\x17', '\x02x\x01\x17', '\x02\x7f\x01\x17', '\x02³\x01\x17', '\x02½\x01\x17', '\x02â\x01\x17', '\x02í\x01\x17', '\x08\x01\x17', '\r\x01\x17', '\x0e\x01\x17', '\x0f\x01\x17', '\x1b\x01\x17', 'Y\x01\x17', 'c\x01\x17', 'i\x01\x17', 'l\x01\x17', 'u\x01\x17', 'v\x01\x17', 'w\x01\x17', '\x84\x01\x17', 'ü\x01\x17', '\x01\x03\x01\x18', '\x01@\x01\x18', '\x01G\x01\x18', '\x01\x85\x01\x18', '\x01²\x01\x18', '\x01Æ\x01\x18', '\x01á\x01\x18', '\x02:\x01\x18', '\x02x\x01\x18', '\x02\x7f\x01\x18', '\x02³\x01\x18', '\x02½\x01\x18', '\x02í\x01\x18', '\x08\x01\x18', '\r\x01\x18', '\x0e\x01\x18', '\x0f\x01\x18', '"\x01\x18', 'Y\x01\x18', 'c\x01\x18', 'i\x01\x18', 'l\x01\x18', 'u\x01\x18', 'v\x01\x18', 'w\x01\x18', '\x84\x01\x18', 'ü\x01\x18', '\x01\x03\x01\x19', '\x01@\x01\x19', '\x01G\x01\x19', '\x01\x85\x01\x19', '\x01²\x01\x19', '\x01Æ\x01\x19', '\x01á\x01\x19', '\x02:\x01\x19', '\x02x\x01\x19', '\x02\x7f\x01\x19', '\x02³\x01\x19', '\x02½\x01\x19', '\x02í\x01\x19', '\x08\x01\x19', '\r\x01\x19', '\x0e\x01\x19', '\x0f\x01\x19', 'Y\x01\x19', 'b\x01\x19', 'c\x01\x19', 'l\x01\x19', 'u\x01\x19', 'v\x01\x19', 'w\x01\x19', '\x84\x01\x19', 'ü\x01\x19', '\x01\x03\x01\x1a', '\x01@\x01\x1a', '\x01G\x01\x1a', '\x01\x85\x01\x1a', '\x01²\x01\x1a', '\x01Õ\x01\x1a', '\x01á\x01\x1a', '\x02:\x01\x1a', '\x02x\x01\x1a', '\x02\x7f\x01\x1a', '\x02³\x01\x1a', '\x02½\x01\x1a', '\x02í\x01\x1a', '\x08\x01\x1a', '\r\x01\x1a', '\x0e\x01\x1a', '\x0f\x01\x1a', 'Y\x01\x1a', 'b\x01\x1a', 'c\x01\x1a', 'l\x01\x1a', 'u\x01\x1a', 'v\x01\x1a', 'w\x01\x1a', '\x84\x01\x1a', 'ü\x01\x1a', '\x01\x03\x01\x1b', '\x01@\x01\x1b', '\x01G\x01\x1b', '\x01\x85\x01\x1b', '\x01²\x01\x1b', '\x01Õ\x01\x1b', '\x01á\x01\x1b', '\x021\x01\x1b', '\x02x\x01\x1b', '\x02\x7f\x01\x1b', '\x02³\x01\x1b', '\x02½\x01\x1b', '\x02í\x01\x1b', '\x08\x01\x1b', '\r\x01\x1b', '\x0e\x01\x1b', '\x0f\x01\x1b', 'Y\x01\x1b', 'b\x01\x1b', 'c\x01\x1b', 'l\x01\x1b', 'u\x01\x1b', 'v\x01\x1b', 'w\x01\x1b', '\x84\x01\x1b', 'ü\x01\x1b', '\x01\x03\x01\x1c', '\x01@\x01\x1c', '\x01G\x01\x1c', '\x01\x85\x01\x1c', '\x01²\x01\x1c', '\x01Õ\x01\x1c', '\x01ë\x01\x1c', '\x021\x01\x1c', '\x02x\x01\x1c', '\x02\x7f\x01\x1c', '\x02³\x01\x1c', '\x02½\x01\x1c', '\x02í\x01\x1c', '\x08\x01\x1c', '\r\x01\x1c', '\x0e\x01\x1c', '\x0f\x01\x1c', 'Y\x01\x1c', 'b\x01\x1c', 'c\x01\x1c', 'l\x01\x1c', 'u\x01\x1c', 'v\x01\x1c', 'w\x01\x1c', '\x84\x01\x1c', 'ü\x01\x1c', '\x01\x03\x01\x1d', '\x01@\x01\x1d', '\x01G\x01\x1d', '\x01\x85\x01\x1d', '\x01²\x01\x1d', '\x01Õ\x01\x1d', '\x021\x01\x1d', '\x02x\x01\x1d', '\x02\x7f\x01\x1d', '\x02«\x01\x1d', '\x02³\x01\x1d', '\x02í\x01\x1d', '\x08\x01\x1d', '\r\x01\x1d', '\x0e\x01\x1d', '\x0f\x01\x1d', 'Y\x01\x1d', 'b\x01\x1d', 'c\x01\x1d', 'l\x01\x1d', 'u\x01\x1d', 'v\x01\x1d', 'w\x01\x1d', '\x84\x01\x1d', 'ü\x01\x1d', '\x01\x03\x01\x1e', '\x01@\x01\x1e', '\x01G\x01\x1e', '\x01\x85\x01\x1e', '\x01«\x01\x1e', '\x01Õ\x01\x1e', '\x021\x01\x1e', '\x02x\x01\x1e', '\x02\x7f\x01\x1e', '\x02³\x01\x1e', '\x02í\x01\x1e', '\x08\x01\x1e', '\r\x01\x1e', '\x0e\x01\x1e', '\x0f\x01\x1e', 'Y\x01\x1e', 'b\x01\x1e', 'c\x01\x1e', 'l\x01\x1e', 'u\x01\x1e', 'v\x01\x1e', 'w\x01\x1e', '\x84\x01\x1e', 'ü\x01\x1e', '\x01\x03\x01\x1f', '\x01@\x01\x1f', '\x01G\x01\x1f', '\x01\x85\x01\x1f', '\x01«\x01\x1f', '\x01Õ\x01\x1f', '\x02)\x01\x1f', '\x02x\x01\x1f', '\x02\x7f\x01\x1f', '\x02³\x01\x1f', '\x02í\x01\x1f', '\x08\x01\x1f', '\r\x01\x1f', '\x0e\x01\x1f', '\x0f\x01\x1f', 'Y\x01\x1f', 'b\x01\x1f', 'c\x01\x1f', 'l\x01\x1f', 'u\x01\x1f', 'v\x01\x1f', 'w\x01\x1f', '\x84\x01\x1f', 'ü\x01\x1f', '\x01\x03\x01 ', '\x01@\x01 ', '\x01G\x01 ', '\x01\x85\x01 ', '\x01¤\x01 ', '\x01Õ\x01 ', '\x02)\x01 ', '\x02x\x01 ', '\x02\x7f\x01 ', '\x02³\x01 ', '\x02í\x01 ', '\x08\x01 ', '\r\x01 ', '\x0e\x01 ', '\x0f\x01 ', 'Y\x01 ', 'b\x01 ', 'c\x01 ', 'l\x01 ', 'u\x01 ', 'v\x01 ', 'w\x01 ', '\x84\x01 ', 'ü\x01 ', '\x01\x03\x01!', '\x01@\x01!', '\x01G\x01!', '\x01\x85\x01!', '\x01¤\x01!', '\x01Õ\x01!', '\x02)\x01!', '\x02x\x01!', '\x02\x7f\x01!', '\x02³\x01!', '\x02í\x01!', '\x08\x01!', '\r\x01!', '\x0e\x01!', '\x0f\x01!', 'Y\x01!', 'b\x01!', 'c\x01!', 'l\x01!', 'u\x01!', 'v\x01!', 'w\x01!', '\x84\x01!', 'ô\x01!', '\x01\x03\x01"', '\x01@\x01"', '\x01G\x01"', '\x01\x8c\x01"', '\x01¤\x01"', '\x01Õ\x01"', '\x02)\x01"', '\x02x\x01"', '\x02\x7f\x01"', '\x02³\x01"', '\x02í\x01"', '\x08\x01"', '\r\x01"', '\x0e\x01"', '\x0f\x01"', 'Y\x01"', 'b\x01"', 'c\x01"', 'l\x01"', 'u\x01"', 'v\x01"', 'w\x01"', '\x84\x01"', 'ô\x01"', '\x01\x03\x01#', '\x01@\x01#', '\x01G\x01#', '\x01\x8c\x01#', '\x01¤\x01#', '\x01Õ\x01#', '\x02)\x01#', '\x02x\x01#', '\x02\x7f\x01#', '\x02³\x01#', '\x02Ü\x01#', '\x08\x01#', '\r\x01#', '\x0e\x01#', '\x0f\x01#', 'Y\x01#', 'b\x01#', 'c\x01#', 'l\x01#', 'u\x01#', 'v\x01#', 'w\x01#', '\x84\x01#', 'ô\x01#', '\x01\x03\x01$', '\x01@\x01$', '\x01E\x01$', '\x01\x8c\x01$', '\x01¤\x01$', '\x01Õ\x01$', '\x02)\x01$', '\x02x\x01$', '\x02\x7f\x01$', '\x02³\x01$', '\x02Ü\x01$', '\x08\x01$', '\r\x01$', '\x0e\x01$', '\x0f\x01$', 'Y\x01$', 'b\x01$', 'c\x01$', 'l\x01$', 'u\x01$', 'v\x01$', 'w\x01$', '\x86\x01$', 'ô\x01$', '\x01\x03\x01%', '\x01@\x01%', '\x01E\x01%', '\x01\x8c\x01%', '\x01¤\x01%', '\x01Õ\x01%', '\x02)\x01%', '\x02x\x01%', '\x02\x7f\x01%', '\x02³\x01%', '\x02Ü\x01%', '\x08\x01%', '\r\x01%', '\x0e\x01%', '\x0f\x01%', 'Y\x01%', 'b\x01%', 'c\x01%', 'l\x01%', 'm\x01%', 'v\x01%', 'w\x01%', '\x86\x01%', 'ô\x01%', '\x01\x03\x01&', '\x01@\x01&', '\x01E\x01&', '\x01\x89\x01&', '\x01\x8c\x01&', '\x01Õ\x01&', '\x02)\x01&', '\x02x\x01&', '\x02\x7f\x01&', '\x02³\x01&', '\x02Ü\x01&', '\x08\x01&', '\r\x01&', '\x0e\x01&', '\x0f\x01&', 'Y\x01&', 'b\x01&', 'c\x01&', 'l\x01&', 'm\x01&', 'v\x01&', 'w\x01&', '\x86\x01&', 'ô\x01&', "\x01\x03\x01'", "\x01@\x01'", "\x01E\x01'", "\x01\x89\x01'", "\x01\x8c\x01'", "\x01Õ\x01'", "\x02)\x01'", "\x02x\x01'", "\x02\x7f\x01'", "\x02³\x01'", "\x02Ò\x01'", "\x08\x01'", "\r\x01'", "\x0e\x01'", "\x0f\x01'", "Y\x01'", "b\x01'", "c\x01'", "l\x01'", "m\x01'", "v\x01'", "w\x01'", "\x86\x01'", "ô\x01'", '\x01\x03\x01(', '\x01@\x01(', '\x01E\x01(', '\x01\x8c\x01(', '\x01\x92\x01(', '\x01Õ\x01(', '\x02)\x01(', '\x02x\x01(', '\x02\x7f\x01(', '\x02³\x01(', '\x08\x01(', '\r\x01(', '\x0e\x01(', '\x0f\x01(', 'Y\x01(', 'b\x01(', 'c\x01(', 'l\x01(', 'm\x01(', 'v\x01(', 'w\x01(', '\x86\x01(', 'ô\x01(', '\x01\x03\x01)', '\x01@\x01)', '\x01E\x01)', '\x01\x8c\x01)', '\x01Õ\x01)', '\x02)\x01)', '\x02x\x01)', '\x02\x7f\x01)', '\x02³\x01)', '\x08\x01)', '\r\x01)', '\x0e\x01)', '\x0f\x01)', 'R\x01)', 'b\x01)', 'c\x01)', 'l\x01)', 'm\x01)', 'v\x01)', 'w\x01)', '\x86\x01)', 'ô\x01)', '\x01\x13\x01*', '\x01@\x01*', '\x01E\x01*', '\x01\x8c\x01*', '\x01Õ\x01*', '\x02)\x01*', '\x02x\x01*', '\x02\x7f\x01*', '\x02³\x01*', '\x08\x01*', '\r\x01*', '\x0e\x01*', '\x0f\x01*', 'R\x01*', 'b\x01*', 'c\x01*', 'l\x01*', 'm\x01*', 'v\x01*', 'w\x01*', '\x86\x01*', 'ô\x01*', '\x01\x11\x01+', '\x01@\x01+', '\x01E\x01+', '\x01\x8c\x01+', '\x01Õ\x01+', '\x02)\x01+', '\x02x\x01+', '\x02\x7f\x01+', '\x02³\x01+', '\x08\x01+', '\r\x01+', '\x0e\x01+', '\x0f\x01+', 'R\x01+', 'b\x01+', 'c\x01+', 'l\x01+', 'm\x01+', 'v\x01+', 'w\x01+', '\x86\x01+', 'ô\x01+', '\x01\x13\x01,', '\x01@\x01,', '\x01E\x01,', '\x01\x8c\x01,', '\x01Õ\x01,', '\x02)\x01,', '\x02P\x01,', '\x02\x7f\x01,', '\x02³\x01,', '\x08\x01,', '\r\x01,', '\x0e\x01,', '\x0f\x01,', 'R\x01,', 'b\x01,', 'c\x01,', 'l\x01,', 'm\x01,', 'v\x01,', 'w\x01,', '\x86\x01,', 'ô\x01,', '\x01\x13\x01-', '\x01@\x01-', '\x01A\x01-', '\x01\x8c\x01-', '\x01Õ\x01-', '\x02)\x01-', '\x02P\x01-', '\x02\x7f\x01-', '\x02³\x01-', '\x08\x01-', '\r\x01-', '\x0e\x01-', '\x0f\x01-', 'R\x01-', 'b\x01-', 'c\x01-', 'l\x01-', 'm\x01-', 'v\x01-', 'w\x01-', '\x86\x01-', 'ô\x01-', '\x01\x13\x01.', '\x01@\x01.', '\x01A\x01.', '\x01\x8c\x01.', '\x01Õ\x01.', '\x020\x01.', '\x02P\x01.', '\x02\x7f\x01.', '\x02³\x01.', '\x08\x01.', '\r\x01.', '\x0e\x01.', '\x0f\x01.', 'R\x01.', 'b\x01.', 'c\x01.', 'l\x01.', 'm\x01.', 'v\x01.', 'w\x01.', '\x86\x01.', 'ô\x01.', '\x01\n\x01/', '\x01@\x01/', '\x01A\x01/', '\x01\x8c\x01/', '\x01Õ\x01/', '\x020\x01/', '\x02P\x01/', '\x02\x7f\x01/', '\x02³\x01/', '\x08\x01/', '\r\x01/', '\x0e\x01/', '\x0f\x01/', 'R\x01/', 'b\x01/', 'c\x01/', 'l\x01/', 'm\x01/', 'v\x01/', 'w\x01/', '\x86\x01/', 'ô\x01/', '\x01\n\x010', '\x01@\x010', '\x01A\x010', '\x01\x8c\x010', '\x01Õ\x010', '\x020\x010', '\x02P\x010', '\x02\x7f\x010', '\x02³\x010', '\x08\x010', '\r\x010', '\x0e\x010', '\x0f\x010', 'R\x010', 'b\x010', 'c\x010', 'l\x010', 'm\x010', 'n\x010', 'w\x010', '\x86\x010', 'ô\x010', '\x01\n\x011', '\x01@\x011', '\x01Q\x011', '\x01\x8c\x011', '\x01Õ\x011', '\x020\x011', '\x02P\x011', '\x02\x7f\x011', '\x02³\x011', '\x08\x011', '\r\x011', '\x0e\x011', '\x0f\x011', 'R\x011', 'b\x011', 'c\x011', 'l\x011', 'm\x011', 'n\x011', 'w\x011', '\x86\x011', 'ô\x011', '\x01\n\x012', '\x01@\x012', '\x01Q\x012', '\x01\x8c\x012', '\x01Õ\x012', '\x020\x012', '\x02P\x012', '\x02\x7f\x012', '\x02³\x012', '\x08\x012', '\r\x012', '\x0e\x012', '\x0f\x012', 'R\x012', '[\x012', 'b\x012', 'l\x012', 'm\x012', 'n\x012', 'w\x012', '\x86\x012', 'ô\x012', '\x01\n\x013', '\x01@\x013', '\x01Q\x013', '\x01\x9a\x013', '\x01Õ\x013', '\x020\x013', '\x02P\x013', '\x02\x7f\x013', '\x02³\x013', '\x08\x013', '\r\x013', '\x0e\x013', '\x0f\x013', 'R\x013', '[\x013', 'b\x013', 'l\x013', 'm\x013', 'n\x013', 'w\x013', '\x86\x013', 'ô\x013', '\x01\n\x014', '\x01@\x014', '\x01\x9a\x014', '\x01Õ\x014', '\x020\x014', '\x02Q\x014', '\x02\x7f\x014', '\x02³\x014', '\x08\x014', '\r\x014', '\x0e\x014', '\x0f\x014', 'R\x014', '[\x014', 'b\x014', 'l\x014', 'm\x014', 'n\x014', 'w\x014', '\x86\x014', 'ô\x014', '\x01\n\x015', '\x01@\x015', '\x01\x91\x015', '\x01Õ\x015', '\x020\x015', '\x02\x7f\x015', '\x02³\x015', '\x08\x015', '\r\x015', '\x0e\x015', '\x0f\x015', 'R\x015', '[\x015', 'b\x015', 'l\x015', 'm\x015', 'n\x015', 'w\x015', '\x86\x015', 'ô\x015', '\x01\n\x016', '\x01@\x016', '\x01\x91\x016', '\x01Õ\x016', '\x02(\x016', '\x02\x7f\x016', '\x02³\x016', '\x08\x016', '\r\x016', '\x0e\x016', '\x0f\x016', 'R\x016', '[\x016', 'b\x016', 'l\x016', 'm\x016', 'n\x016', 'w\x016', '\x86\x016', 'ô\x016', '\x01\n\x017', '\x01@\x017', '\x01\x91\x017', '\x01Õ\x017', '\x02(\x017', '\x02\x7f\x017', '\x02³\x017', '\r\x017', '\x0e\x017', '\x0f\x017', '\x18\x017', 'R\x017', '[\x017', 'b\x017', 'l\x017', 'm\x017', 'n\x017', 'w\x017', '\x86\x017', 'ô\x017', '\x01\n\x018', '\x01@\x018', '\x01\x91\x018', '\x01Õ\x018', '\x02(\x018', '\x02y\x018', '\x02³\x018', '\r\x018', '\x0e\x018', '\x0f\x018', '\x18\x018', 'R\x018', '[\x018', 'b\x018', 'l\x018', 'm\x018', 'n\x018', 'w\x018', '\x86\x018', 'ô\x018', '\x01\n\x019', '\x01@\x019', '\x01\x91\x019', '\x01Õ\x019', '\x02(\x019', '\x02y\x019', '\x02³\x019', '\r\x019', '\x0e\x019', '\x0f\x019', ' \x019', 'R\x019', '[\x019', 'b\x019', 'l\x019', 'm\x019', 'n\x019', 'w\x019', '\x86\x019', 'ô\x019', '\x01\n\x01:', '\x01@\x01:', '\x01\x91\x01:', '\x01Õ\x01:', '\x02(\x01:', '\x02y\x01:', '\x02³\x01:', '\r\x01:', '\x0e\x01:', '\x0f\x01:', ' \x01:', 'R\x01:', '[\x01:', 'b\x01:', 'd\x01:', 'm\x01:', 'n\x01:', 'w\x01:', '\x86\x01:', 'ô\x01:', '\x01\n\x01;', '\x01@\x01;', '\x01£\x01;', '\x01Õ\x01;', '\x02(\x01;', '\x02y\x01;', '\x02³\x01;', '\r\x01;', '\x0e\x01;', '\x0f\x01;', ' \x01;', 'R\x01;', '[\x01;', 'b\x01;', 'd\x01;', 'm\x01;', 'n\x01;', 'w\x01;', '\x86\x01;', 'ô\x01;', '\x01\n\x01<', '\x01@\x01<', '\x01£\x01<', '\x01Õ\x01<', '\x02(\x01<', '\x02I\x01<', '\x02³\x01<', '\r\x01<', '\x0e\x01<', '\x0f\x01<', ' \x01<', 'R\x01<', '[\x01<', 'b\x01<', 'd\x01<', 'm\x01<', 'n\x01<', 'w\x01<', '\x86\x01<', 'ô\x01<', '\x01\x1c\x01=', '\x01@\x01=', '\x01£\x01=', '\x01Õ\x01=', '\x02(\x01=', '\x02I\x01=', '\x02³\x01=', '\r\x01=', '\x0e\x01=', '\x0f\x01=', ' \x01=', 'R\x01=', '[\x01=', 'b\x01=', 'd\x01=', 'm\x01=', 'n\x01=', 'w\x01=', '\x86\x01=', 'ô\x01=', '\x01\x1c\x01>', '\x01@\x01>', '\x01£\x01>', '\x01Õ\x01>', '\x02(\x01>', '\x02I\x01>', '\x02¥\x01>', '\r\x01>', '\x0e\x01>', '\x0f\x01>', ' \x01>', 'R\x01>', '[\x01>', 'b\x01>', 'd\x01>', 'm\x01>', 'n\x01>', 'w\x01>', '\x86\x01>', 'ô\x01>', '\x01\x1f\x01?', '\x01@\x01?', '\x01£\x01?', '\x01Õ\x01?', '\x02(\x01?', '\x02I\x01?', '\x02¥\x01?', '\r\x01?', '\x0e\x01?', '\x0f\x01?', ' \x01?', 'R\x01?', '[\x01?', 'b\x01?', 'd\x01?', 'm\x01?', 'n\x01?', 'w\x01?', '\x86\x01?', 'ô\x01?', '\x01\x1f\x01@', '\x01@\x01@', '\x01£\x01@', '\x01Õ\x01@', '\x02\x13\x01@', '\x02I\x01@', '\x02¥\x01@', '\r\x01@', '\x0e\x01@', '\x0f\x01@', ' \x01@', 'R\x01@', '[\x01@', 'b\x01@', 'd\x01@', 'm\x01@', 'n\x01@', 'w\x01@', '\x86\x01@', 'ô\x01@', '\x01\x1f\x01A', '\x01@\x01A', '\x01£\x01A', '\x01Õ\x01A', '\x02(\x01A', '\x02I\x01A', '\x02¥\x01A', '\r\x01A', '\x0e\x01A', '\x0f\x01A', ' \x01A', 'J\x01A', '[\x01A', 'b\x01A', 'd\x01A', 'm\x01A', 'n\x01A', 'w\x01A', '\x86\x01A', 'ô\x01A', '\x01\x1f\x01B', '\x01@\x01B', '\x01£\x01B', '\x01Õ\x01B', '\x02(\x01B', '\x02I\x01B', '\x02¥\x01B', '\r\x01B', '\x0e\x01B', '\x0f\x01B', ' \x01B', 'R\x01B', '[\x01B', 'b\x01B', 'd\x01B', 'f\x01B', 'm\x01B', 'w\x01B', '\x86\x01B', 'ô\x01B', '\x01\x1f\x01C', '\x01@\x01C', '\x01£\x01C', '\x01Õ\x01C', '\x02\x13\x01C', '\x02I\x01C', '\x02¥\x01C', '\r\x01C', '\x0f\x01C', '\x1e\x01C', ' \x01C', 'R\x01C', '[\x01C', 'b\x01C', 'd\x01C', 'm\x01C', 'n\x01C', 'w\x01C', '\x86\x01C', 'ô\x01C', '\x01\x1f\x01D', '\x01@\x01D', '\x01£\x01D', '\x01Õ\x01D', '\x02\x13\x01D', '\x02A\x01D', '\x02¥\x01D', '\r\x01D', '\x0f\x01D', '\x1e\x01D', ' \x01D', 'R\x01D', '[\x01D', 'b\x01D', 'd\x01D', 'm\x01D', 'n\x01D', 'w\x01D', '\x86\x01D', 'ô\x01D', '\x01\x1f\x01E', '\x01A\x01E', '\x01£\x01E', '\x01Õ\x01E', '\x02\x13\x01E', '\x02¥\x01E', '\r\x01E', '\x0f\x01E', '\x1e\x01E', ' \x01E', 'R\x01E', '[\x01E', 'b\x01E', 'd\x01E', 'm\x01E', 'n\x01E', 'w\x01E', '\x86\x01E', 'ô\x01E', '\x01\x1f\x01F', '\x01£\x01F', '\x01Õ\x01F', '\x02\x01\x01F', '\x02¥\x01F', '\r\x01F', '\x0f\x01F', '\x1e\x01F', ' \x01F', 'R\x01F', '[\x01F', 'b\x01F', 'd\x01F', 'm\x01F', 'n\x01F', 'w\x01F', '\x86\x01F', 'ô\x01F', '\x01\x1f\x01G', '\x01£\x01G', '\x01Õ\x01G', '\x02\x01\x01G', '\x02¥\x01G', '\r\x01G', '\x0f\x01G', '\x1e\x01G', ' \x01G', 'R\x01G', '[\x01G', 'b\x01G', 'd\x01G', 'm\x01G', 'n\x01G', 'w\x01G', '\x8e\x01G', 'ô\x01G', '\x01\x1f\x01H', '\x01£\x01H', '\x01Õ\x01H', '\x02\x01\x01H', '\x02¥\x01H', '\r\x01H', '\x0f\x01H', '\x1e\x01H', ' \x01H', 'R\x01H', '[\x01H', 'b\x01H', 'd\x01H', 'm\x01H', 'n\x01H', 'w\x01H', '\x8e\x01H', 'ë\x01H', '\x01-\x01I', '\x01£\x01I', '\x01Õ\x01I', '\x02\x01\x01I', '\x02¥\x01I', '\r\x01I', '\x0f\x01I', '\x1e\x01I', ' \x01I', 'R\x01I', '[\x01I', 'b\x01I', 'd\x01I', 'n\x01I', 'w\x01I', '\x8e\x01I', 'ë\x01I', '\x01-\x01J', '\x01Õ\x01J', '\x02\x01\x01J', '\x02¥\x01J', '\r\x01J', '\x0f\x01J', '\x1e\x01J', ' \x01J', 'R\x01J', '[\x01J', 'b\x01J', 'd\x01J', 'n\x01J', 'w\x01J', '\x8e\x01J', 'ã\x01J', '\x01$\x01K', '\x01Õ\x01K', '\x02\x01\x01K', '\x02¥\x01K', '\r\x01K', '\x0f\x01K', '\x1e\x01K', ' \x01K', 'R\x01K', '[\x01K', 'b\x01K', 'n\x01K', 'w\x01K', '\x8e\x01K', 'ã\x01K', '\x01$\x01L', '\x01Õ\x01L', '\x02\x01\x01L', '\x02¥\x01L', '\r\x01L', '\x0f\x01L', '\x1e\x01L', ' \x01L', 'R\x01L', '[\x01L', 'b\x01L', 'n\x01L', 'w\x01L', '\x8e\x01L', 'ê\x01L', '\x01$\x01M', '\x01Õ\x01M', '\x02\x01\x01M', '\r\x01M', '\x0f\x01M', ' \x01M', '%\x01M', 'R\x01M', '[\x01M', 'b\x01M', 'n\x01M', 'w\x01M', '\x8e\x01M', 'ê\x01M', '\x01$\x01N', '\x01Õ\x01N', '\x02%\x01N', '\r\x01N', '\x0f\x01N', ' \x01N', 'R\x01N', '[\x01N', 'b\x01N', 'n\x01N', 'w\x01N', '\x8e\x01N', 'ê\x01N', '\x01<\x01O', '\x01Õ\x01O', '\x02%\x01O', '\r\x01O', '\x0f\x01O', ' \x01O', 'R\x01O', '[\x01O', 'b\x01O', 'n\x01O', 'w\x01O', '\x8e\x01O', 'ê\x01O', '\x01<\x01P', '\x01Õ\x01P', '\x02%\x01P', '\r\x01P', '\x0f\x01P', ' \x01P', 'R\x01P', '[\x01P', 'b\x01P', 'n\x01P', 'w\x01P', '\x8e\x01P', 'ò\x01P', '\x014\x01Q', '\x01Õ\x01Q', '\x02%\x01Q', '\r\x01Q', '\x0f\x01Q', ' \x01Q', 'R\x01Q', '[\x01Q', 'b\x01Q', 'n\x01Q', 'w\x01Q', '\x8e\x01Q', 'ò\x01Q', '\x014\x01R', '\x01Õ\x01R', '\x02%\x01R', '\r\x01R', '\x0f\x01R', ' \x01R', 'R\x01R', '[\x01R', 'b\x01R', 'n\x01R', 'w\x01R', '\x8e\x01R', 'ú\x01R', '\x014\x01S', '\x01ä\x01S', '\x02%\x01S', '\r\x01S', '\x0f\x01S', ' \x01S', 'R\x01S', '[\x01S', 'b\x01S', 'n\x01S', 'w\x01S', '\x8e\x01S', 'ú\x01S', '\x014\x01T', '\x01ä\x01T', '\x02%\x01T', '\r\x01T', '\x0f\x01T', ' \x01T', 'J\x01T', '[\x01T', 'b\x01T', 'n\x01T', 'w\x01T', '\x8e\x01T', 'ú\x01T', '\x01"\x01U', '\x01ä\x01U', '\x02%\x01U', '\r\x01U', '\x0f\x01U', ' \x01U', 'J\x01U', '[\x01U', 'n\x01U', 'w\x01U', '\x8e\x01U', 'ú\x01U', '\x01"\x01V', '\x01ä\x01V', '\x02%\x01V', '\r\x01V', '\x0f\x01V', ' \x01V', 'J\x01V', '[\x01V', 'n\x01V', 'w\x01V', '\x8e\x01V', 'û\x01V', '\x01\x1b\x01W', '\x01ä\x01W', '\x02%\x01W', '\r\x01W', '\x0f\x01W', ' \x01W', 'J\x01W', 'n\x01W', 'w\x01W', '\x8e\x01W', 'û\x01W', '\x01\x1b\x01X', '\x01ä\x01X', '\x02%\x01X', '\r\x01X', '\x0f\x01X', ' \x01X', 'J\x01X', 'n\x01X', 'w\x01X', '\x8e\x01X', 'ü\x01X', '\x01\x14\x01Y', '\x01ä\x01Y', '\x02%\x01Y', '\r\x01Y', '\x0f\x01Y', ' \x01Y', 'J\x01Y', 'n\x01Y', 'w\x01Y', '\x8e\x01Y', 'ü\x01Y', '\x01\x14\x01Z', '\x01ä\x01Z', '\x02%\x01Z', '\r\x01Z', '\x0f\x01Z', ' \x01Z', 'J\x01Z', 'n\x01Z', 'w\x01Z', '\x8e\x01Z', 'ý\x01Z', '\x01\x14\x01[', '\x01ä\x01[', '\x02%\x01[', '\r\x01[', '\x0f\x01[', ' \x01[', 'J\x01[', 'n\x01[', 'w\x01[', '\x96\x01[', 'ý\x01[', '\x01\x14\x01\\', '\x01ä\x01\\', '\x02:\x01\\', '\r\x01\\', '\x0f\x01\\', ' \x01\\', 'J\x01\\', 'n\x01\\', 'w\x01\\', '\x96\x01\\', 'ý\x01\\', '\x01\x14\x01]', '\x01Ó\x01]', '\x02:\x01]', '\r\x01]', '\x0f\x01]', ' \x01]', 'J\x01]', 'n\x01]', 'w\x01]', '\x96\x01]', 'ý\x01]', '\x01\x14\x01^', '\x01Ó\x01^', '\x02:\x01^', '\r\x01^', '\x0f\x01^', ' \x01^', 'J\x01^', 'n\x01^', 'w\x01^', '\x96\x01^', 'þ\x01^', '\x01\x14\x01_', '\x01Ó\x01_', '\x02:\x01_', '\x0f\x01_', '\x1d\x01_', ' \x01_', 'J\x01_', 'n\x01_', 'w\x01_', '\x96\x01_', 'þ\x01_', '\x01\x14\x01`', '\x01Ó\x01`', '\x02*\x01`', '\x0f\x01`', '\x1d\x01`', ' \x01`', 'J\x01`', 'n\x01`', 'w\x01`', '\x96\x01`', 'þ\x01`', '\x01)\x01a', '\x01Ó\x01a', '\x02*\x01a', '\x0f\x01a', '\x1d\x01a', ' \x01a', 'J\x01a', 'n\x01a', 'w\x01a', '\x96\x01a', 'þ\x01a'],
            )
        pgn = self.pgnu
        for e, g in enumerate(self.games):
            pgn.extract_first_game(g)
            pgn.process_game()
            self.assertEqual(True, pgn._tags_valid)
            self.assertEqual(True, pgn._movetext_valid)
            self.assertEqual(True, pgn.is_tag_roster_valid())
            self.assertEqual(True, pgn.is_movetext_valid())
            self.assertEqual(self.tag_string_output[e], pgn._tag_string)
            self.assertEqual(self.tags_output[e], pgn.tags)
            self.assertEqual(self.tags_in_order_output[e], pgn.tags_in_order)
            self.assertEqual(self.tokens_output[e], pgn.tokens)
            self.assertEqual(self.gametokens_output_abbrev[e], pgn.gametokens)
            self.assertTrue(not hasattr(pgn, 'moves'))
            self.assertEqual(len(positions_output[e]), len(pgn.positions))
            for ep, p in enumerate(positions_output[e]):
                self.assertEqual(p, pgn.positions[ep])
            self.assertEqual(
                len(piecesquaremoves_output[e]), len(pgn.piecesquaremoves))
            for ep, p in enumerate(piecesquaremoves_output[e]):
                self.assertEqual(p, pgn.piecesquaremoves[ep])

    def test_process_games_pgn(self):
        """"""
        pgn = self.pgn
        for e, g in enumerate(self.games):
            pgn.extract_first_game(g)
            pgn.process_game()
            self.assertEqual(True, pgn._tags_valid)
            self.assertEqual(True, pgn._movetext_valid)
            self.assertEqual(True, pgn.is_tag_roster_valid())
            self.assertEqual(True, pgn.is_movetext_valid())
            self.assertEqual(self.tag_string_output[e], pgn._tag_string)
            self.assertEqual(self.tags_output[e], pgn.tags)
            self.assertEqual(self.tags_in_order_output[e], pgn.tags_in_order)
            self.assertEqual(self.tokens_output[e], pgn.tokens)
            self.assertEqual([], pgn.gametokens)
            self.assertTrue(not hasattr(pgn, 'moves'))
            self.assertTrue(not hasattr(pgn, 'positions'))
            self.assertTrue(not hasattr(pgn, 'piecesquaremoves'))


def suite__f():
    return unittest.TestLoader().loadTestsFromTestCase(Fragments)


def suite__g():
    return unittest.TestLoader().loadTestsFromTestCase(Games)


def suite__pgnm():
    return unittest.TestLoader().loadTestsFromTestCase(PGNMove)


if __name__ == '__main__':
    unittest.TextTestRunner(verbosity=2).run(suite__g())
    #unittest.TextTestRunner(verbosity=2).run(suite__f())
    #unittest.TextTestRunner(verbosity=2).run(suite__pgnm())
